%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Search_architecture.pdf
%%Creator: Adobe Acrobat 17.12.0
%%For: gaoha
%%CreationDate: 11/17/2022, 4:18:49 PM
%%BoundingBox: 0 0 960 540
%%HiResBoundingBox: 0 0 960 540
%%CropBox: 0 0 960 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1090 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2022-11-17T16:18:34-06:00"
   xmp:CreateDate="2022-11-17T16:18:33-06:00"
   xmp:MetadataDate="2022-11-17T16:18:34-06:00"
   xmp:CreatorTool="Acrobat PDFMaker 17 for PowerPoint"
   xmpMM:DocumentID="uuid:de2679d4-b400-404f-a528-93450f535892"
   xmpMM:InstanceID="uuid:2a5c5286-3ec0-4fc8-b357-6da1a7ff6410"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 17.11.238">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Hao Gao</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
960 540 li
960 0 li
cp
clp
105.6 128.55 mo
103.893 128.55 102.51 127.167 102.51 125.46 cv
102.51 45.24 li
102.51 43.533 103.893 42.15 105.6 42.15 cv
117.96 42.15 li
119.666 42.15 121.05 43.533 121.05 45.24 cv
121.05 125.46 li
121.05 127.167 119.666 128.55 117.96 128.55 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.15845 1 1 .0960403 cmyk
ef
1.02 lw
0 lc
0 lj
8 ml
[] 0 dsh
true sadj
105.6 128.55 mo
103.893 128.55 102.51 127.167 102.51 125.46 cv
102.51 45.24 li
102.51 43.533 103.893 42.15 105.6 42.15 cv
117.96 42.15 li
119.666 42.15 121.05 43.533 121.05 45.24 cv
121.05 125.46 li
121.05 127.167 119.666 128.55 117.96 128.55 cv
cp
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /UZAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f329dc23ae8000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c7966139eed4500011a7800002d7c68656164f84d79b1000014140000
0036686865610dad1e6b0000144c00000024686d74787df7b74700001470
00006ca86c6f6361047877ba0000811800006cac6d6178702e1e2a6f0000
edc4000000206e616d652fa397400000ede4000007a77072657013672219
0000f58c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e4002effc000247b00000009000000004d53202000400000
feff0600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d000001000000063ae1b6c437e55f0f3cf500190800
00000000bbeb7ccc00000000d749774ffbfafd8009ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000001b2a00>
<040e0000000000000000000001cf000004a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
061bffcc061bffcc045a00ac044400610444006104440061044400610444
00610444006104ec00ac04ec009704ff001b04ff001b03e800ac03e80045
03e800ac03e8004603e8004603e8006303e8005f03e8008103e800ac03e8
00ac03ad00ac050c005b050c005b050c005b050c005b050c005b04fc00ac
04fc00ac05400020020400ac0204ff4a020400280204ff390204ff310204
ff500204ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9
042800ac042800ac035d00ac035d0081036200ac035d00ac0370001c045e
00ac06d700ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054f0063054f006306ef0063042200ac042200ac05620063
045800ac045800ac04580053045800ac03ad004703ad004703ad001503ad
001803ad004703ad004703e6000f03e6000f03e6000f03e6000f052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa048a0022071e003d071e003d071e003d071e003d
071e003d0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf
003b03bf003b03bf001a03bf003b03f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f40010055c
ffe2055cffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d
03cb006d046500a10465006a0477003204770032038000a1038000300380
00a103800020038000200380002c0380002903800042038000a1038000a1
035000a10482006c0482006c0482006c0482006c0482006c047800a10478
008c049d004001ec00a101ecff5801ec001901ecff4801ecff2701ecff55
01ecff5201ecff7101ec001101ec0018041b00a1023e0000023eff8c03c9
00a103c900a102e000a102e0008702e600a102e000a102f0003203d500a1
060600a1049100a1049100a10491009904910078049100a1046600a104aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006604ba006604ba00660606006603c500a103c500a104b1006603ed
00a103ed00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6
034f0049034f00490359001c0359fffe0359001c0359001c048d009f048d
009c048d009f048d0097048d0075048d009f048d009f048d009f048d009f
048d009f048d009f03fd0021063e0037063e0037063e0037063e0037063e
003703cc0036038300100383001003830010038300100383001003690044
03690044036900080369004403d5005c03d5005c03d5005c03d5005c03d5
001e03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c
062f005c043400990362005a0362005a0362004e036200570362005a0362
005a076f005a06dd005a0601005a0601005a04340060048c0060046a0060
0434006103fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d02710025069a002508d5002504ab0025
069b002508d50025043c0025043c0025043c0025043c0025044f0025044f
0025044f0025044f0025043c0025043c0025067600250676002506760025
06760025068900250689002506890025068900250676002506760025043c
0025043c0025067600250609002508430025043c0025043c002504830025
043c00250676002504ed002504ed0025051300250728002503c4003503c4
003503c4003503c4003503c4003504340060043400600434006004340060
04340060043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6
ff5a01d6ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085
041e008801eaffd501eaffd501eaff6303a3009903a3009903a3009901d6
009901d6002a021c009901d6004b01fb001c02fd00990664009904340099
04340099043400990434004e0434009904a2ff9d043400990438005a0438
005a0438005a0438005a0438004f0438005a0438005a0438005a0438005a
043c005a043c005a06cc005a04340099043400990434006002ca009902ca
009902cafff902ca006e03210051032100510321fffe0321fffd03210051
0321005105ae005105ae00510438009901f1009902ae002102c4002102ae
002102bc002604e600210475002104750021047500210475002104750021
047500210475002104750021047500210475002105130021074b002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002106d90021043400940434008e04340094043400860434004d0434
00890434008604340094043400940434009404340094039d002205b80035
05b8003505b8003505b8003505b8003503770029039f0022039f0022039f
0022039f0022039f00220329005903290059032900070329005903380072
036100640378005d02ac004402e5006c024e004402e5004802b8004701c1
00240297002a02e9006c01630061016dffd80297006c015e006c0456006c
02e6006c02e6004502e5006c02e5004801f6006c0230004201e3002302e9
006c0285001f03ef002c027e00280286001f023700420254000002750000
029400000000fd080000fce80256000002750000029400000000fd080000
fce803290000035f0000039400000000fc9f0000fc6703290000035f0000
039400000000fc9d0000fc6901ff0000039a000003a2000003a800000000
fc650000fc600324000002f5000003460000036700000000fca00000fc7e
0327000003490000036a00000000fc9d0000fc7d030c0000030f00000311
00000000fcac0000fca9029100000298000002a000000000fce90000fce2
02cf000002c2000002b5000003c1000003e10000040000000000fc520000
fc3101ce000001d6000001ce000001ce00000000fd4d0000fd4d02750084
0000fd7a027f00840000fd7601f700840231000004a1002304a1ff89045a
00ac035300ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e
054c0063020400ac0204feb20204ff52042800ac0495002406d700ac052a
00ac03ef0053054c0063054cff1604fc00ac042200ac03ab004603e6000f
03e6001e03e6fe6e03e6001e0613000004270030060000900550005e0550
fef903f4001003f40010040400a102fb00a103c90023038000a1038000a1
03690044047800a1047800a104b4006601ec00a101ec000001ecff5403c9
00a103e10011060600a1049100a10387005e04aa006604aa0066047800a1
03c500a1035b004b0359001c0383001003830010038300100552000003cc
00360558008704b1006604b10066048a0061048a00610440009904320064
039200180430000003a5005903a5005902c8004e044c0099044c00990441
006004780006023200940232ffec0232ff7a0232ff0f03a3009903b40000
04660099039700220302004d0303004d0438005a0438005a046c00280412
0076044100590349005c0319000304550090045500900455007d04550016
05360055053b00550369001205a900940592006405920064028900000000
fd0a03f400000000fc360205009702050097020500970224004801ff006e
01ff006e04a10023044d00ad045a00ac037000ac037000ac037600ac0527
000303e800ac03e8004503e800610668005503ca004b052200ac052200ac
052200ac020400ac0204ff50028d0007045800ac045800ac04e3000306fa
000306d700ac04fc00ac070300ac054c0063054c006304f900ac042200ac
0444006103ad004703e6000f0438000f0438000f04b80022059400000427
0030051c00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac
044000ac0462005d04610062070800ac0471005304ff000f04f2000f0504
000003f4001003ee00a2040400a1031400a1031400a1032700a10480000e
038000a1038000300380002c0578004403800057048900a1048900960489
009501ec00a101ecff55023e000003ca00a103ca00a104320001060600a1
047800a104aa006604a90066046a00a103c500a103cb006d034f00490359
001c039d001e039d001b042f0022050a000003cc0036048e00a1046900a1
03fa006d062300a1064500a1045f0017058300a103e800a103e4006b03f0
0066063200a103ff005c045f001f0463001f044d000006010001063200a1
03d5005c044300000430000003d5009902c4009902c4009902d5009901d6
ff58047700170434006003fb005d03fb005d03fb005d0583003e0362004b
04530099045300780453008801d6008501d6ff7201eaffd503b6009903b6
009904150016060200130569005f04470099062800990438005a0431005a
042a009904340086043400990362005a032100510319000a06640099039f
0022039f001803d2002204fe005103770029045500990433009903c00042
05d4009905fe0099044a000a0554009903c20099038b004d038d005d05c6
009903cb00380453fff90443fff904270018036e0000036e0000036e0000
0000fca50000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5
005e03de0064026000ed026000b10364007a0361005f01ff002a02240048
022400bb020500970586009601ff008c01ff002a01ff008c01ff002a0359
00880359002b035900880359002b01ff002a0359002b02b6007402b600c0
02b6007402b600c004190075041900ad04190075041900ad0317000102df
001f03af018a03fc01ae0317000b02df002d027300450273004503fcfff6
03fcfff6073e0095073e0095073e0095073e009503fcfff903fc00c10205
009702050097026d0085026d007a027400bf0274005a0284005602840075
024000840240007a024a00b0024a0067026d0085026d007a027400bf0274
005a028400560284007503fc009e03fc007703fc007803fc007604b0006b
043d006e03fc006a03fc003d01c4008b0335008b057500000556000007f7
000007270000073c00000727000006ad00af06ad00af040e008005a4003f
05ac004d02b6000003fc003f04b30049040e002a03fc0057040e00600434
005803fc00b903fc004a040e005303fc006d0419002b040e003403f30035
039f006103be005f039f0058039f002506210049083300ac03fc002406e3
00a10411001d0494005f02cb002303ec006203ec00510455002203d70051
0436007e03b20035043600630436005c040e0048040e00ae040e0072040e
0067040e0020040e0065040e006b040e0063040e0052040e005204430067
028d00190381005c0373005903ac00260368006103b7006e0349002f03b5
004b03bc0052039f0050039f008d039f0065039f0062039f003a039f0067
039f0061039f005e039f0051039f00500494005f02cb002303ec006203ec
00510428002203d700510436007e03b20035043600630436005c040e0048
040e00ae040e0072040e0067040e0030040e0065040e006b040e0063040e
0052040e00520321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc00580321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc0058029d003801f500310252003c0249002d024a001402460032
025100300238002202570025024d0023029d003801f500310252003c0249
002d024a001402460032025100300238002202570025024d002302b1ff4b
03130044055f0044056900440517004405690044052e00440553004405c9
004e05c9004e0567004705b7004705a2004705cd0027057d004505a20045
052a003505b80048084e0048057d005c07c9005c03fc004603fc004c03fc
006003fc002b03fc005e03fc006003fc005903fc004503fc006503fc004c
03fc005503fc005603fc003d05e9002c0405003506d300690443006102ed
000703fc00080484003a0550005e04660099066500660454005b0416004a
073e009a073e0096073e00c9073e00c9070e00af070e013a070e00af070e
013a0a4e009a0638009f04660028018a000001da00000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601d0
04a1002304a1002304a1002304a1001904a1001504a1001d04a1002304a1
001c04a1001c04a1001c04a1001d04a1002303e800ac03e800ac03e80037
03e8ffe803e8ffe903e8ffe803e8ffe803e8003702040015020400a0054c
0063054c0063054c0063054c0063054c0063054c0063054c006305940063
0594006305940063059400630594006305940063052200aa052200aa05c6
00aa05c600aa05c600aa05c600aa05c600aa05c600aa03e6001e03e6001e
03e6001e03d5005c03d5005c03d5ffbb03d5ffb103d5ffb803d5ffb803d5
005703d5ffb803d5ffb803d5ffb803d5ffb803d5005c03fb005d03fb005d
03fb003003fbffdb03fbffdb03fbffd903fbffcb03fb005d01d6002601d6
00850438005a0438005a0438ffe80438ffea0438ffe80438ffea0438005a
04a0005a04a0005a04a0005a04a0005a04a0004904a0005a043400940434
009404d2009404d2009404d2008c04d2009404d2004604d20094039f0022
039f0002039f0022046a00530466003803f4001003f4001003f4ffbd03f4
ffc003f4ffbd03f4ffc803f4001003f4ffc803f4ffc803f4ffc803f4ffc8
03f40010038000a1038000a10380fff00380ffa70380ffa00380ffa20380
ff8e0380001101ec000901ec009404aa006604aa006604aa002104aa0022
04aa002104aa002204aa006604ec006604ec006604ec006604ec006604ec
006604ec0066048d009f048d009f0515009f0515009f0515009a0515009f
051500750515009f038300100383fff10383001001da0000046600000466
000004660000046600000466000004660000046600000466000004c10066
052400ac052400ac050600ac049300a1049300a1047c00a103e6000f02ae
00210359001c01d60011043c0025043c0025043c00250676002506760025
0676002502f5001c02e7008e0306005a034b008e02a8008e028c008e0344
005a035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d
0375005a02d8008e0375005a029b005702800046025700040314005702e3
001a0445002202b5001c028b001c02b800500000fdfd0000fdfd0466ffff
0466ffff0466ffff0466ffff03c1ffff03c10000030cffff030c0000030c
ffff030c0002023100000231000001ffffff01ffffff01ffffff01ffffff
0000fd090000fd0902aa008202aa008202aa009802aa009801ce008402aa
008202aa008202aa008202aa0082027f008e027f008e0324000002910084
046601fd02aa001402aa00130329000003290000032900000329ffff039a
00000327000003fcfff903fcfff9039a0000039a00000000ff080000fe4c
0000fdfb0000fdfb0000fe3f0000fe3f0000fdc20000fdc201ce008402aa
00140291008302aa001502aa009302aa0093039a014c039a00000000fdfd
0000fdfd0000fd090000fce90000fd090000feb702aa001402aa001403fc
fff90466ffff02aa0098039a0000039a0000039a0000039a0000039a0000
039a000004010014040101470000000002aaffff02aaffff01ceffff01ce
ffff030c0000030c000002aa009302aa00c802aa00c803f100c801ceffff
01ceffff01ce000001ce000002aa00a003b1008402aaffff02aaffff075c
003c075cffff075cffff075cffff075cffff075c003f06d0ffff06d0ffff
075c0003075c0003075c004001df003001df003001e7003201e7003200f8
004400f8004402070030020700300209004c0209004c019d0030019d0030
02070032020700320209004c0209004c0309004c0309004c015f004c015f
004c015200180152001801c3001601c3001601bf001c01bf001c03270051
0327005103270051032700510000ffab03bdffff041a0000041a00000416
000104160001041a0001041a0001041a0001041a00010401000204010002
0401000204010002015f004c02aa00c801ce00c803f100c804ec000f044d
00ad0440001e0462005d049d006104ff001b057e000f044d004c03e8006c
0525006403ca005a03adffd6050e005b048a001c025000ac0226001b0428
00ac070900aa052affd6054c0063062f006104e4000f045800ac03ad0047
03ab0046043f000f03e6000f0550005e052200aa0442001e03bf003b03ca
004b03ca005a040e006808ab00ac081500ac060300ac054700ac07b700ac
071400ac04a100230204ff3a054c0063052200aa052200aa052200aa0522
00aa052200aa04a1002304a10023061bffcc050c005b050c005b04280073
054c0063054c006303ca0008089500ac081500ac050c005b072800ac04d4
00ac052a00ac04a1ffef04a1002303e8ffe103e8006e0204feac0204ff4c
054c003b054c00630458ffbf0458006e0522002f052200aa03ca004b04fc
00ac052400ac040e004d03ef003b04a1002303e800ac054c0063054c0063
054c0063054c006303e6001e04a1ffd90444ffe7035d001b03e6ffb80394
0064046b001b0545001b0495002403e8ff9e02a10007050a00630469001a
04a0001b04a10023045a00ac045a00ac045a00990444006104ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac03e8008403e8008403e8008203e80034
03e8008103ad00ac050c005b04fc00ac04fc00ac04fc00ac04fc002804fc
00ac0204ff360204ff71042800ac042800ac042800a0035d00ac035d0035
035d0060035d006606d700ac06d700ac06d700ac052a00ac052a00ac052a
00ac052a00ac054c0063054c0063054c0063054c0063042200ac042200ac
045800ac045800ac04580077045800ac03ad004703ad004703ad004703ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa048a0022048a0022071e003d071e003d0427
00300427003003e6001e03bf001503bf003b03bf003b035d001b03c2ff9b
0433001b045800ac052400ac047100ac03e2003b0444003803ad005903b5
00ac046a0027043400990434000403b3005a043400600430005d0271ffee
064300990434009903a300990241002703b40014044c0099053e00590434
00990321005102e0002102ae002103fc001b0329005903ca004b0366003a
03680050075d006003c00099061e009903d5005601d6ff570438005a0434
007a0434008804340088043400880434008803fb006203d5005803d50058
062f005c044cffe203c4003503a3003a0438005a0438005a03ca002e01ea
ff60075d006003c400350434009903d5ffbf03d5005c03fbffe203fb005d
01d6fece01d6ff650438ffed0438005a02caff7302ca00100434ffff0434
008703ca004b0434005104cd0060040e0052034c005903d5005c03fb005d
0438005a0438004f0438005a0438005a039f00220289009804eb009902ae
002106930060069200600362fff003210051032900590394006403fb003c
0240fff70240fff70434006002ff002703e2002203720049040e00720321
005101f300ad032900ad049700ac029b010a03d5005c0434009904340099
043400860362005a043400600434006004340060043400600434006003fb
005d03fb005d03fb005d03fb005003fb005d0271002503c4003504340099
0434009904340067043400130434009401d6ff1e01d6ff1e01d6ff5a03a3
009903a3009903a3006b01d6008901d6ff5801d6ff5801d6ff5906640099
0664009906640099043400990434009904340086043400860438004f0438
004f0438005a0438005a043400990434009902ca009902ca008a02ca000a
02caffff032100510321005103210051032100030321005102ae002102ae
002102aeffd202aeffd204340089043400550434007b0434004d04340086
039d0001039d002205b8003505b800350377002903770029039f00220329
000103290059032900000434008602aeffc605b80035039f002203d5005c
01f100530241002703d5002902aeff960463009903db00990344005903c2
00360362003b02ee003c03190099053b00550471000803ee00a203ee0014
03cb004803fc006d0477003204d3000803ee00530380007204a40066038a
00680350ffe80482006c03f300130232008e01ecfffe03c900a106320091
0491ffe804aa00660592006e0433000803ed00a1034f0053035b004b0383
00080359001c04b10066048d009f03b7001003690044039000570393006b
0398005507ce00a1085500ac055a00a105cd00ac06cf00a1076800ac03f4
001001ecff4704aa0066048d0096048d009f048d009f048d009f048d009f
03f4001003f40010055cffe20482006c0482006c03c9005204aa006604aa
00660390000007ce00a1085500ac0482006c065500a1046200a0049100a1
03f4ffc503f400100380ffb10380004d01ecfed001ecff7004aa001d04aa
006603edffa403ed0064048d0000048d009f039000570478008c049300a1
03c50057038c004403f40010038000a104aa006604aa006604aa006604aa
00660383001003f4001003cb002402e000270359ffeb0339005004040027
048d002703fd00210380ffff023e0000048b006603ed00270383000c0390
00550339005001f300ac032900ac049700ac026000ed03f40010040400a1
040400a10404006e03cb006d046500a1046500a104650081046500a10465
00950380002a0380002603800041038000000380004a035000a10482006c
047800a1047800a10478009a04780020047800a101ecff2a01ecff5503c9
00a103c900a103c9007e02e000a102e0000002e0002802e00024060600a1
060600a1060600a1049100a1049100a1049100a1049100a104aa006604aa
006604aa006604aa006603c500a103c500a103ed00a103ed00a103ed003e
03ed0091034f0049034f0049034f0049034f0000034f00490359001c0359
001c0359001803590019048d009f048d0079048d009f048d0075048d009f
03fd002103fd0021063e0037063e003703cc003603cc0036038300100369
00050369004403690020047800a10359000a063e00370383001003f40010
02e00027035effa703c5002703ed00a104b600a103ef00a10369004403cb
004803500060039900a1043c0025043c00250447002504470025043c0025
043c0025044f0025043c0025043c00250676002506760025068200250682
002506760025067600250689002506760025067600250475002104750021
0475002104750021047500210475002104750021047500210475002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002103d500960434006004340099043400990362003b039b005a0434
00600434006003fb006203fb0062051b00650362005a0362004b0435004b
043b005d0241fff704340060043400600451005a039d001f03d0001e0433
009404340099043400990241002701d6fff3023200940267002102e7ffa7
02f9002701d60099048600990663009406630094066400990434ffc20434
0099045300990438005a05b3005a059200640536005502ca002302ca0023
02ca002302ca009902ca0099028e0094028e002303980085039800850321
005101eaffd50242fff801eaffd5028affc402ae004102ae002104a40027
0476004904550090039d002205b80035039f00220351001f0329005903d3
005903bc004b03bb0056039400640394005e039400640362005a0507005f
03d50099043b005a046b005a04470099028affc403a30027031900990434
0060039400640394005e066f006006d400600719006004f3002103c40021
057a0021060c002504ae00990469009903ef002c03ef00700434ffd5044d
ffd503d60010050fffe3062f00620412002703cb006a0444009904590030
033f0099036f005501d60085022700000391009802f000300569005f0453
00990474005a03cb006304a9006604a800660528001406cc00560368003a
0438005a0438005a03a8009903cf005203cf0052033f001b046a009a0465
004b05c7004b0664014c03de0020060e0035034f0042032f003803210051
03d0001e02f2009903de00200450009903a80099052f0083040e000102f5
001c03f1000002e7008e02fb0027034b008e02a8008e02a800500344005a
035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d0375
008d0375005a02b2004802d8008e029b0057025700040314005704450022
02ac004402ac006c02e50048042b004402e5006c02e5004802b8004702b8
004702770046027700460297002a016300610297006c0456006c02e6006c
02e60045024e003602e6004502e6004502e5006c01e3002302e9006c02db
00460456006c0285001f024a000d02be006c024600230283002803650055
025f00180163006101f6006c02e9006c0285001f02be006c0246002302e5
006c03650050025f00180694009404bbffa704bd0060030affa7069cffe5
04b4002204beffa70352ffa7031affa7039d0014030fffa70329ffc203c4
003b0304006e03c400350688002102410027026900270468002704db0027
04c40027043400990451006002710025054c0060041e009901f0006b067f
0099045100990434009902ca006a037b005102faffd5039d002203ed0029
033c0059047c005c04d800600434006003fb005d0362005a0362004b03fb
006201d600850362003b0233001e04d800940376004b02e5006b024e0044
026e004402b200440277004201c1002401c100070297002a02e9006c0192
000001aa006c0163006d0192000001e500000194006c017b00530224006e
0456006c0456006c031b0000031c006c0304006e02e60045033600450230
0042016dffd801e4002302e9000002b8002c02e6006e02e6006e0285001f
023700420294004202a600420272003c02e6004502e9006c02e9006c016d
ffd801f6006c01f6002502030025028b006c03ef002c0286001f01c40054
0334005401ff008c01ff002a01ff008c01ce008401ce0084029900650299
006c03fc004503fc0065044b0044044b0044025100f20256000002540000
025100f2032700000254000002560000023900980239009801ce008401ce
008402aa008202aa008202aa008202aa008202aa004b02aa009302610024
015e006c02300042027e00280299006c0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203290000049a00000359002b02aa008502aa008502aa00c802aa
00c8029100840254000003c1ffff03c10000039a0000022400bb02aa0098
02aa009802aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402ac004402b8004702e60045
027e002802b8004701d9ffff01d9ffff01d9000001d90000028900000289
000002890000028900000000fc660000fc66032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
00000324000003f4000003f4000003f4000003f400000324000003240000
03270000030c000001ffffff01d900000327000003290000032900000329
00000466000004660000046600000466000003f4000003f4000003f40000
03f40000023200b6023200b6054c00630444006104440043044400610444
004303e6000e0456fec803e6000e03ad00ac054c0063045d001e059700ac
04a2000f04440061042200ac043200640375005a037500420478000604d7
00510684001404120076041200030362005a0362003b0362005a0362003b
053b0055037800940438005a0399001404c5009904a2000f0349005c01ea
ffd50476ffd504d7005104a9006603cb006d03cb004803cb006d03cb0048
0389001a0389fe6f0389001a035000a104b1005b03e2001e050000a1045d
002a03db006d03c500a104a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc6
04a1fe8b04a1fe6204a1ff2204a1ff8004a1ff5804a1002304a1002304a1
002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe62
04a1ff22066500230665ffc50665fe8a0665fe620665ff220665ffc60665
fe8b0665fe620665ff2203e8fef004bdfe8204bdfe7a03e8fef004c1fe86
04bdfe7a03e8fea403e8fe9504fcfef005d1fe8205d1fe7a0559feaa04fc
fef005d1fe8205d1fe7a0559feaa04fcfea404fcfe9504fc00ac04fcfef0
05d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa06c0
00ac06c0fef00795fe820795fe7a071dfeaa06c0fef00795fe820795fe7a
071dfeaa0204fef002d9fe8202d9fe7a0261feaa0204fef002d9fe8202d9
fe7a0261feaa0204fea40204fe950204ff4e0204ff7a054cff0605f5fe82
060cfe7b054cff0605f2fe7f0605fe74054cfecf054cfeac0422fef003e6
fe940517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6001e03e6001e
0550ff0605f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599
feaa0550fecf0550feac0550005e0550ff0605f2fe7b060dfe780599feaa
0550ff0605f2fe7b0611fe7c0599feaa0714005e0714ff0607b6fe7b07d1
fe78075dfeaa0714ff0607b6fe7b07d5fe7c075dfeaa048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a005a048a0061048a0061048a0061048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
005a03a5005903a5005903a5004f03a5005903a5005203a5005203a50059
03a50059044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059044c0099044c0099044c0092
044c008f044c0094044c0099044c0092044c0092044c0094044c0099044c
0099044c0059023200010232ff860232ff830232ff62023200000232ff86
0232ff860232ff600232ff100232fecf0232ff600232ffef0232ff7b0232
ff290232ff690232ff680438005a0438005a0438005a0438005a0438005a
0438005a0438005a0438005a041200760412007604550090045500820455
008204550084045500900455008204550082045500840455001204550010
04550080045500900455009004550041045500710455007d059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006403f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001005b9001005b9
001005b9001005b9001005b9001005b9001005b9001005b9001005b90010
038000a10380004903800049038000a10380004903800049038000a10380
007b047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1047800a1047800a10478006f047800a1047800a1047800a10478
00a1047800a1047800a1047800a1047800a1047800a1063c00a1063c00a1
063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a101ec
000901ecff6201ecff6201ecff6501ec000901ecff6201ecff6201ecff65
01ecff1001ecfee901ecff6401ec000001ecff8c01ecff2a01ecff5301ec
ff7004aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006603c500a103c500a1038300100389001a038300100389001a0383
00100389001a038300100389001a038300100389001a038300100389001a
038300100389001a038300100389001a038300100389001a038300100389
001a0383fff50389fff5038300100389001a038300100389001a04b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b100660675006606750066067500660675
0066067500660675006606750066067500660675006604a1002304a1ffc5
04a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204fc
00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a
0559feaa0550005e0550ff0605f2fe7b060dfe780599feaa0550ff0605f2
fe7b0611fe7c0599feaa066500230665ffc50665fe8a0665fe620665ff22
0665ffc60665fe8b0665fe620665ff2206c000ac06c0fef00795fe820795
fe7a06c0fe4d06c0fef00795fe820795fe7a06c0fe4d0714005e0714ff06
07b6fe7b07d1fe780714fe610714ff0607b6fe7b07d5fe7c0714fe6101d9
ffff01d900000289000002890000039a0000032900000329000003240000
03290000032900000324000003f4000003f400000324000001d900000327
0000030c0000023200b601c4007901c4007901c40079054e00ac0440000a
042200ac0366001b044100ac06b2005503ca004b04a500ac045800ac046a
001b050c000f052400ac05b100ac073800ac052b00630444006103e6000f
03e6001e03e6001e0476003005d2000f049a007404720074047200ad05f6
002805f60028020400ac06680055045f00ac050e000304fc00ac04fc00ac
04720074070700ac04a1002304a10023061bffcc03e80059052500640525
00640668005503ca001503ca004b052200ac052200ac054c0063054c0063
054c00630462004c0438000f0438000f0438000f04720071035300ac0618
00ac0366001b048500300427003004400035065d0037061d003d041a003d
070f0003072800ac0515005b0521000f03ca005a05090003045f009903df
00270434009902f90027039f009905c0003e0362004b03f4009903b60099
03eb00270447000a0471009904d8009905f10099046f00590362005a0319
000a039d0022039d002203b2002904c5000a03ea004203c0004203c00099
04c8001904c800190583003e03cf009904210016044700990454009903c0
004205b6005f020400ac03d5002e03d50058062f005c03fb005603fb0062
03fb00620583003e0362000803bc004b04530095045300970438005a0431
005a0431005a038b0004039f0022039f0022039f002203c0002902c40099
0554009902f9002703b10029037700290434006006550060059b004b03ba
004b061f001606500099044500500481000a0362005a042b001604a800a1
03e8002703c500a10314002703ec00a105d0004403800057041c00a103ca
00a103ca002704530017049800a1050100a1067700a104a2006503cb006d
0359001c0383001003830010041300360545001c041a006d03fa006d03fa
00a1054f0020054f002001ec00a10578004403ff00a1045a0001047800a1
04a100a103fa006d062f00a103f4001003f40010055cffe20380004204a2
006504a20065057800440380000303900057048900a0048900a004aa0066
04a9006604a9006603e4001e039d001e039d001e039d001e03fa00440314
00a1058300a1031400270417003603cc003603e8004a0588004a05590072
03d8007205d20001061900a10488006c0444001c03800068045c00010400
000008000000040000000800000002af0000020000000155000004500000
01bc00000199000001000000000000000000ffdc0000ff2a040e0024040e
00240329009003fcfff901ff008c0358008801c400540334005404a40054
0476010a03fcfffb0273004404ee004f044400610444006103ad0027040e
005306640099052a0020076000ac064800ac071e002005f500ac0428001b
03e6000f08a80032043afffe0482002104b2005b0495002003ad00200444
00610621004906210065057800e6059d00e603fc005e070100bc03fc0062
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff6070900aa045c005b047200ad0444007104d0003a0562007403c90010
06640094042f005f04180015035a0053040b00300441006f032600100327
00030327000303270003025400c0025400c0025400c8025400c802aaff8c
02aaff8c04e0005907f4000a07e2001407980003076c0061064100ac050b
002406a700ac05c80055073f00ac03ca00210600009004b8001c085c0063
054c003b076c0061076c006104440061056a0022053400990433001b05af
00990480001b060b0099034e001605a9009403d2ffc40745005a049c005a
06420059056a00220362005a06b8006d05c300a10453001205c000a1050b
0046066400a10380002205580087042e002207f10066050f006806b0006d
06b8006d039c006d03c7009602aa00db040e008d0000ffdc0000fe5101cf
0000022400bb01c700000163006102b1ff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bdffff02aaff8c
055001e5027f008403240000039a00000256000000000027000000e10000
00ed0000001b032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000034600000000002703c10000030f000003460000
03460000039a0000034800000348000003a2000003a2000002560000035f
00000000009e00000067000000220000009e0000009e0000009e0000009e
0000009e0517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6000e03e6
000e03f4001003f4001003f4001005b8001005b8001005b80010047800a1
047800a10478006f063c00a1063c00a1063c006f0383ffc80383ffc80383
001004b1006604b1006604b100660675006606750066067500660000fdbc
0000fd1a0000fd770000fd4f0000fbfe0000fbfa0000fc000000fbfa0000
fc000000fbfa0000fc000000fbfa0000fc000000fc000000fc000000fc00
0000fc000000fc000000fc000000fc000000fdd00000fc300000fc300000
fbff0000fbff0000fbff0000fbff0000fbff0000fc000000fcac0000fcad
0000fcac0000fcac0000fd1b0000fd1b0000fd340000fd340000fd340000
fd340000fd600000fd600000fd730000fd730000fdcf0000fd5f0000fd5f
0000fd5f0000fd5f0000fd7f0000fd7f0000fca10000fd6f0000fdfd0000
fcef0000fcf20000fca00000fca00000fcae0000fcad0000fc660000fca0
0000fc2f0000fc2f0000fc660000fc5f0000fdd00000fcf10000fd6d0000
fcf30000fd710000fd710000fdb10000fc650000fcf10000fcf10000fc2f
0000fbff0000fd770000fc660000fc660000fc650000fc650000fc650000
fc650000fc460000fd790000fcde0000fcde0000fd4b0000fd4b0000fca8
0000fca80000fd710000fda60000fda60000fce30000fd4c0000fd4c0000
fd4b0000fd4b0000fd7e0000fcdf0000fcde0000fcde0000fc8f0000fc52
0000fc520000fc520000fc520000fc920000fc970000fc970000fc560000
fc560000fc910000fd820000fd820000fd700000fd700000fdfa0000fdfa
0000fd5f0000fd5f0000fd790000fd790000fd8f0000fd8f0000fd6e0000
fd6e0000fd7a0000fd7a0000fcfb0000fcfb0000fdb60000fdb60000fda8
0000fda80000fd680000fd680000fd710000fd710000fcf10000fcf10000
fcf10000fcf10000fc540000fc260000fc260000fc290000fc290000fc27
0000fc270000fc270000fc270000fc350000fc350000fc350000fc350000
fdb60000fda80000fda80000fce30000fd460000fd460000fd470000fd47
0000fd020000fd020000fd020000fd020000fc650000fc660000fc9f0000
fc9f0000fc9f0000fc9f0000fca10000fca10000fc9f0000fc9f0000fc9f
0000fc9f0000fca10000fca10000fc370000fc370000fc370000fc370000
fca00000fca00000fc9f0000fcad0000fd330000fd470000fc9f0000fc9f
0000fc9f0000fc9f0000fbff0000fc020000fbff0000fc000000fc370000
fc370000fc370000fc370000fdbd0000fdbd0000fca20000fca30000fca3
0000fdd10000fdd10000fdd10000fdd10000fc6a0000fc6a03e6fe940389
ffcb0389ffcb0389001a01d6008904340060043400600434006004340060
043c0025067600250aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b4047d00a3040e0023040e0054040e
001b040e002e0557001e040e001e07570026027100240271002504300000
04e300ac0366000f0476006203cb005a0438ffff039fffe106d700ac04a1
0023053f00ac05a2005d02ca00350438005a03800072016dffd802f5001c
03ad004703bf003b0254007801de00640254007801de006404fc00ac0434
0099058b000f056d002103ca004b038f005a03c100220366001e04680022
0411001e035000a1034f0049084900230610005c081400220671005c07cc
0022063b005c068800230545005c068800230545005c068800230545005c
04440057036200500428001203a3ffe9042800ac03a300990428001203a3
ffe9040900ac027b0099035d001201d6fff6054cffe20438ffec05c80063
04b9005a091b0063070f005a042200120434ffea054e0037052e003705cc
0014067800250562006304340060070c006305a40060041e007803350050
04a7005303fd0032048a0022039d0022071e003e05b8003503bc004b03a7
004b0422001c0434ffea0422001c0434ffea03a300ac032000990346003c
0346003c03df001e03700014042b005c042b005c0262003c05690060031b
009907a300990569009902ca0099051900a1034e002103b70064054cfff6
04340061035f00ac02ca009903c4003503c4003503c40035035d001201d6
0099052400ac04340099035f00ac02ca0099049f005a03b7005a04fc00ac
02fe0000054f00ac046200990461ffcc038dffe10362005a043400990504
000f053f005003adffd602710025051e00630444005a053800630437005a
051e00630444005a050cffb803c400080428000803a30008052afffe0434
001c0458002602ca000c03ad003a03210051058d000f03ca004b053c0061
03ec00000428003003e6000f052e000a035b0024047b00450664009903ad
00590422005b06d700ac020400ac08d50022048afff2062f005c03a4006f
03fbfff204c80015027100250434006002a6001401d6ff1d01d6fffa0664
0099043400990434009903c7004903c70049043c007406cc005a06cc005a
06cc005a070f005a070f005a0401006403ed00a1028d009903dd00990393
001404a6001403b2003f057b003f01eaffd50434009404a4002706640099
066400990470fffa0369001203be001203690012041a00290377ff4a041a
ff4a0377fef003510022030c008402e9006c01ee0000015effc7031d0000
0434006004b100660655000305580016057900ac056c009906550052062c
00380562006304340060071e003d05b80035042800ac03a3009907210003
05db0016073800ac060c0099051f00ac0450009904d100ad043c00990512
ffec0447ffc2096e000508030017049b0005040d0017050b0003043c0016
052400280000ff8f0000ff7e0000ff300000ff100000fefc0320007c0000
ff2f0000ff310000ff530000ffb70000ff4c0000ff4d0000ffad0000fec3
0000fdc5000000000000ff4d0000ff4d000000d50000fecb0000fe4b0000
ff320000ff460000ff2f0000ff550000ff5e0000ff4d0000feb70000ff66
0000ff4d0000ff320000ff2f0000ff5f0000ff55000000000000fe4d0000
ff3700000000000000000000000000000000000000000000000000000000
00000000000000000000ffb70000ffb70000000000000000000000000000
00000000ffb70000ffc3027300450000ff3101de00a10000048400000057
022400960000ffa80000ffa80000ff190000fe6e02eb009400000000044b
006a046b006a03f3002b02f30019038f0018048f008c049a008c01da0099
02530018049d0099046e006b0477006b01da00990390001803a1001803ce
002e0378001c04ae009904b3009904a5005404ad005401da009902eb002b
048b0028043100150427005b0439005b0454006d0464006d037a002003e2
0019044b008c0451008c03900018058c004a0591004a04d7003604e50036
03b5009903b5009903b5009901ff002a0359002b01da00990000ff0603b5
0099043100150577006904bb001805bb008c04fa002e04a4001c05da0099
04bc00180603003603fc0046044b006a044b006a046b006a03f3002b03f3
002b02f3001902f30019038f0018038f0018049a008c048f008c0242001e
01da009901da00990299001e0477006b0242001e039000180390001803a1
001803ce002e03ce002e0378001c03adff6a03adff6a04ad005402eb002b
048b00280439005b0464006d0454006d03e200190451008c039000180591
004a058c004a058c004a0591004a0591004a04e5003604d7003603e8001c
042f001d05f400ac03bf00370329005903bf00370329005903ad00470321
0051025000ac02320094050e008204010064055e0050037d003208790063
073500640440ffd703c2ffcd06d7000f05df000a062600ac057b00990708
006305c6005a06f000ac058d009904a10022039d002205c800550480001b
06f000ac059b009904c8001403d20022051c002c0455001d05d20005050d
001705b7000304d1001607a900ac05f70060054c00630438005a054c0063
0438005a091b0063070f005a0655007e0000fea207e2006f074b00c807e2
002603d1007d000000640000006400000064000000640000006400000064
00000064000000640000fe480000ff32036e0000025b005e052700010477
001703b700470338005107c9004b06c2004b0706007405e6004205b50001
04ed00170530000f043d000a03e6000f0319000a051c00ac0468008503e6
000f0319000a05340014048c0014047200ad04340099071a00ac060f0099
091b0063070f005a054c00630431005a03a2006402e50064000000640409
00ac036d009903e6000f03190014052200ac04530099028d0007042800ac
045a00ac042200ac0422005b04ec00ac03e6000f03e6000f050c005b0428
00ac04280030028d0007044400610444003803bf003b03ad00ac03ad0059
06d700ac052a00ac035d00ac03ad0047045800ac0458004d04950024048a
002204fc00ac050c0094028d00a9071e003d0427003003e6001e045a0059
04a1002304a1002303e800ac03e8006c020400ac054c0063052200aa0522
00aa035d001204ec005d0205009702050097039500970395009702000097
020000970454006403970064053d00480500000c083b003205c300310382
00310a1500320a1a00320000fff6042d004b042d004b06cc000005aa00c8
06f400c803d300620266006a033e004507640031045900000266006a01ff
ffa8037e006a03ca0075005fffa80410018004100157041000ba04100047
041000c3041000b5041000950410004c0410004c041000aa057300c80223
00490243007103400056035b00c50a6d008405ce00a3045f008804100180
04100155041000b8041000430410006f04100076041000930410004c0410
004c041000aa024400b102820085035a00850175009c0200008c0200008c
02bf008c02bf008c02bf008c02bf008c02bf008c02bf008c02d0009602d0
0096020f007b0201008c0201008c02180071031e009e031e009e0282ffa8
0282ffa80282ffa804be006704be00d2028200680282ffa80282002d02a0
00000282005b0282006c0282ffa8028200680282ffa80282006d0282ffa8
0282006a0282ffa8028200ab0282ffa80410007d041000c701ee006f0243
006f03470070040600540350006f0360005d038e003903ea003903ea0039
0364003901ee006f0243006f034700700406005403d9007003dd005d0393
003803ea003903ea0039036400390398005d0329003c027000d2027000b6
027000490270001e0270004a027000410270002c0270001b0270001b0270
003902700013027000170270002302700020027000450270001202700037
02700025027000260270001e02700028027000190270001b027000140270
0019026600de026600c302660069026600250266006c0266006802660058
0266002b0266002b026600640266003c0266004202660057026600480266
00750266003e0266005e0266004f0266004f0266002e0266005102660044
02660047026600400266004404c40031000000000000000004c4003104c4
00310000ffa80000fef50000fef90000fee40000fef50000fe7a0000ff09
0000fe840000ff310000ff5e0000ff4a0000ff5e0000ff220000feeb0000
ff170000ff2a0000ff490000ff250000ff290000ff650000ff120000ff4b
0000ff480000ffaa0000ff480000ff440000ff210000ff350000ff370000
ff930000ff490000ff2a0000ff150000ffad0000fe390000fe920000ff03
0000ff190000ff3b0000ff220000fe9f0000ff7b0000ff890000ff480000
ff6a0000fe9f0000ff120000febb0000ff2a0000ff610000ff610000ff84
0000ff690000ff480000ff290000ff220000ff290000ff1e0000ff150000
ff300000ffb20000ff4c0000ff3a0000ffb20000ff4c0000ff3a0000fee5
0000feda0000fee50000ff620000ff1e0000ff2a0000ff250000ff980000
ff980000ff980000ff980000ff2d0000fed20000ff470000ff170000ff6f
0000fefc0000ff0b0000ff230000ff290000ff210000ff240000ff150000
ff2a0000ff220000ff3c0000fefc0000ff480000ff130000ff0702760000
01790005018500250185007f0179ffd10179ffda0185fffa0225007f0179
ffc70179ffcb01deffbc01dd000401de005d01de007f01ddffe001ddffd9
01de003201de007f01ddffc001ddffc40669004c0669004c0669004c0669
004c0669004c0669004c0669004c0669004c0669004c0669004c0669004c
0669004c0669004c0669004c0669004c0669004c0669004c0669004c0669
004c0669004c0669004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff9501f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ff9d0251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa806e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c04ca004c04ca004c
04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca
004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c
04ca004c04c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa804ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c0347005803470058034700580347005803470058
034700580347005803470058034700580347005803470058034700580347
0058034700580347005803f1005703f1005703f1005703f1005703f10057
03f1005703f1005703f1005703f1005703f1005703f1005703f1005703f1
005703f1005703f100570358000003580000035800000358000003580000
035800000358000003580000035800000358000003580000035800000358
0000035800000358000003580000036d00000358000003a9000003a90000
03a9000003a9000003a9000003a9000003a9000003a9000003a9000003a9
000003a9000003a9000003a9000003a9000003a9000003a9000003a00000
03a90000072b004c072b004c072b004c072b004c072b004c072b004c072b
004c072b004c072b004c072b004c072b004c0507ffa80507ffa80507ffa8
0507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507
ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa8
0566ffa80566ffa80566ffa80566ffa80791004c0791004c0791004c0791
004c0791004c0791004c0791004c0791004c0791004c0791004c0791004c
0846004c0846004c0846004c0846004c0846004c0846004c0616ffa80616
ffa80616ffa80616ffa80616ffa80616ffa8063affa8063affa8063affa8
063affa8063affa8063affa80865004c0865004c0865004c0865004c0865
004c0865004c061c003b061c003b061c003b061c003b04d5ffa804d5ffa8
04d5ffa804d5ffa804f4ffa804f4ffa804f4ffa804f4ffa8063b003b063b
003b063b003b063b003b04b5004c04b5004c04b5004c04b5004c04b5004c
04b5004c04b5004c04b5004c03dfffa803dfffa803dfffa803dfffa803df
ffa803dfffa803dfffa803dfffa8038effa8038effa8038effa8038effa8
038effa8038effa8038effa8038effa80401004c0401004c0401004c0401
004c0401004c0401004c0401004c0401004c06c8004c06c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c02db
ffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80351
ffa80351ffa80351ffa80351ffa80351ffa8072f004c072f004c072f004c
072f004c072f004c072f004c072f004c072f004c072f004c072f004c04f9
004c04f9004c04f9004c04f9004c04f9004c02dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80506
004c0506004c0506004c0506004c0506004c0556003b0556003b0556003b
0556003b0556003b0556003b0720004c0720004c0720004c0720004c0720
004c0720004c0720004c0720004c0720004c0720004c0720004c0720004c
0720004c0720004c03bdffa803bdffa803bdffa803bdffa803bdffa803bd
ffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa8
03bdffa803beffa803beffa803beffa803beffa803beffa803beffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80635004c0635004c0635004c
0635004c0635004c0635004c0736004c0736004c0736004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c08d9003b07a5ffa807d4ffa80909003b045f004c0469
004c0469004c0469004c045f004c045f004c045f004c01cdffa801d9ffa8
01d9ffa801d9ffa801cdffa801cdffa801cdffa8020cffa8020cffa8020c
ffa8020cffa8020cffa8020cffa8020cffa804ad004c04ad004c04ad004c
04ad004c04ad004c04ad004c04ad004c036e0059036e0059036e0059036e
0059032fffa8032fffa8032fffa8032fffa80392ffa80392ffa80392ffa8
0392ffa804140059041400590414005904140059045b004c045b004c045b
004c045b004c045b004c045b004c045b004c045b004c045b004c01f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80495004c0495004c0495004c0495004c0495004c0495
004c0495004c0495004c0495004c0524003b0524003b039e004c0524003b
040fffa80411ffa801f6ffa80411ffa8033effa8033effa802dcffa8033e
ffa80378004c052e003b0378004c052e003b02c6004c02c6004c02c6004c
02c6004c02c6004c0378004c0378004c039e004c039e004c0378004c037a
0000037a0000037a0000037a0000037a0000037a0000037a0000037a0000
037a0000037a0000037a0000037a0000037a0000037a0000037a0000037a
00000317004c03cb000003cb000003cb000003cb000003cb000003cb0000
03cb000003cb000003cb000003cb000003cb000003cb000003cb000003cb
000003cb000003cb000002c9004c055b004c055b004c055b003b055b0031
055b0031055b004c055b004c055b004c055b004c055b0039055b004c055b
004c055b004c055b004c055b004c055b004c055b004c01f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa802ab
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80497004c0497004c0497004c04970046049700460497
004c0497004c0497004c0497004c0497004c0497004c0497004c0497004c
0497004c0497004c0497004c0497004c055bff3b044bff0007dc004c07dc
004c0306004c02d0001507dc004c07dc004c01f6ffa801f6ffa80251ffa8
0251ffa802d0001502d000150301007f0301007f036e005903d8007f0433
007f0562004c05bc004c05a90000060b000005a90000060b000005a90000
060b000005a90000060b000004fa000005ab00000441ffa804fa000005ab
00000441ffa80467004c0467004c01de007f0185007f043affd9043afffd
0458003b0458003b04d4000304d4003b04f2003b04f2003b08a4004b072c
004b08a4004b072c004b09e90030083f006b0763005f06cd000009550000
0960ffe8096000000960fffe0930ffff0185ffd901de000402d2007c02d2
007c0179007f01dd007f0469004c01d9ffa8020cffa804ad004c04f5003b
04f5003b04f5003b04f5003b054e003b054e003b054e003b054e003b04f5
003b05ab000005ab00000400ffa80444ffa80444ffa80556003b0556003b
037300000373000003730000037300000373000003730000037300000373
000003730000037300000373000003730000037300000373000003730000
0373000003a0000003730000038700000387000003870000038700000387
000003870000038700000387000003870000038700000387000003870000
038700000387000003870000038700000347005803470058034700580347
0041034700580347005803470058035800000358000006c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c02dbffa802dbffa802dbff8d02db
ff6f02dbffa802dbffa802dbffa803bdffa803bdffa803bdffa803bdffa8
03beffa803beffa801cdff2f032fffa801f6ff8904f5003b03b4ffa802dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff28032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa80245ff280245ff280245ff280245
ff280243ff280243ff2801f6ffa801f6ffa801f6ffa801f6ff3301f6ff23
01f6fed101f6ffa801f6ff5c01f6ff5c01f6ff2201f6ff5d01f6ff5501f6
ffa801f6ffa801f6ffa801f6ff3301f6ff2201f6ff9401f6ff2201f6ff22
01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ff3301f6ff2201f6
ff2201f6ff4e01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ffa8
01f6ffa801f6ffa401f6ff9401f6ff4101f6ffa801f6ffa501f6ffa501f6
ff9201f6ff9c01f6ff9b01f6ffa801f6ffa801f6ffa801f6ffa401f6ff92
01f6ffa801f6ff9201f6ff9201f6ff9201f6ff9301f6ff9201f6ff9201f6
ffa801f6ffa401f6ff9201f6ff9201f6ff9201f6ff9201f6ff9201f6ff92
01f6ff920251ffa80251ffa80251ffa80251ffa40251ff940251ff410251
ffa80251ffa50251ffa50251ff920251ff9c0251ff9b0251ffa80251ffa8
0251ffa80251ffa40251ff920251ffa80251ff920251ff920251ff920251
ff930251ff920251ff920251ffa80251ffa40251ff920251ff920251ff92
0251ff920251ff920251ff920251ff9201fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbff9501fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ff9d0233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80255ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa801fbffa801fbffa8
01fbffa801fbff3301fbff2301fbfed101fbffa801fbff5c01fbff5c01fb
ff2201fbff5d01fbff8801fbffa801fbffa801fbffa801fbff3301fbff22
01fbff9401fbff2201fbff2201fbff2201fbff2201fbff2201fbff2201fb
ffa801fbff3301fbff2201fbff2201fbff5201fbff2201fbff2201fbff22
01fbff2201fbffa801fbffa801fbffa801fbffa401fbff9401fbff4101fb
ffa801fbffa501fbffa501fbff9201fbff9c01fbff9b01fbffa801fbffa8
01fbffa801fbffa401fbff9201fbffa801fbff9201fbff9201fbff9201fb
ff9301fbff9201fbff9201fbffa801fbffa401fbff9201fbff9201fbff92
01fbff9201fbff9201fbff9201fbff920233ffa80233ffa80233ffa80233
ffa40233ff940233ff410233ffa80233ffa50233ffa50233ff920233ff9c
0233ff9b0233ffa80233ffa80233ffa80233ffa40233ff920233ffa80233
ff920233ff920233ff920233ff930233ff920233ff920233ffa80233ffa4
0233ff920233ff920233ff920233ff920233ff920233ff920233ff9202dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff28
02dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff2802dcff2802dcff2802dcff2802dcff2802f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff27032dffa8032dffa8032dffa8032dffa8032dffa8032d
ffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80245ff280245ff280245ff28
0245ff280245ff280245ff280245ff280245ff280245ff280245ff280245
ff280245ff280245ff280245ff280243ff280243ff280243ff280243ff28
0243ff280243ff2802f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff270694
004c0694004c0694004c0694004c0694004c0694004c0694004c0694004c
0694004c0694004c0694004c0694004c0694004c0694004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c0668004c0668004c0668
004c0668004c03d0004c03d0004c03d0004c03d0004c0185ffc70185ff96
01de005d01de003201f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff8201f6ffa801f6ffa801f6ff8201f6ff8201f6ffa801f6ffa801f6ff82
01f6ff8201f6ff9401f6ff8201f6ff820251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbff8201fbffa801fbffa801fbff8201fbff82
01fbffa801fbffa801fbff8201fbff8201fbff9401fbff8201fbff820233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051d
ffa8051dffa803470058034700580347005803f1005703f1005703f10057
0507ffa80566ffa802dbffa80351ffa803b4ffa80458003b04f2003b0458
003b04f2003b0282ffa80000feb70000fef50000fef90000fee40000fef5
0000fe7a0000ff090000fe840000ff310000ff5e0000ff500000ff5b0000
ff2a0000feeb0000ff2b0000ff2a0000ff490000ff2a0000ff2d0000ff65
0000ff120000ff4e0000ff4e0000ffb10000ff490000ff440000ff210000
ff350000ff370000ff9e0000ff490000ff2a0000ff150000ffb10000fe39
0000fe920000ff060000ff2c0000ff3b0000ff210000fe9f0000ff7b0000
ff950000ff480000ff6a0000fe9f0000ff120000fec80000ff2d0000ff68
0000ff680000ff8b0000ff690000ff490000ff290000ff220000ff290000
ff1d0000ff1c0000ff2a0000ffba0000fedf0000feda0000fed90000ff62
0000ff140000ff2a0000ff2a0000ff980000ff980000ff980000ff980000
ff2d0000feda0000ff4f0000ff1f0000ff6f0000fefc0000ff1f0000ff27
0000ff2d0000ff210000ff2d0000ff190000ff2a0000ff2a0000ff3c0000
fefc0000ff4e0000ff180000ff1504be006704be00ee0a07006b0321ffa8
0341001e0242001e02280071024c006a024c006a0000ff1d042d004b0000
ff8e0000ff2d0000ff870000ff490000ff2d0000ff2c0000ff560000ff24
0000ff990000ff420000ff970000ff3f0000ff920000ff620000ff3f0000
ff3e0000ff650000ff2e0000ffac0000ff660000ff840000fef40000ff48
0000ff480000ff1d0000ff350000ff560000ff370000ff560000ff090000
ff090000ff1d0000fe760000fe760000ff5f0000ff5f0000000f0000000f
0000ff9f0000ffae0000ff770000ff6c0000ff590000ff6e0000ff000000
ff8e0000ff2d0000ff870000ff2d0000ff2c0000fec10000ff240000ff99
0000ff350000ff3f0000ff920000ff3f0000ff3e0000fedc0000ff2e0000
ff9f0000ff570000ffa00000ff4f0000ff4e0000ff240000ff480000ff1d
0000ff350000ff5a0000ff370000ff560000ff090000ff090000ff1d0000
ff240000fefb0000ff720000ff770000ff770000ff770000ff6e0000ff74
0458003b043a003b0461003b0443003b04f2003b04d4003b04f2003b04d4
003b05370004080700000866000009380000095d0000055500000811ffdc
0870ffdb0942ffdc0968ffdb0648004c0543004c05f7004c0659004c07d6
004c0833004c08b7004c0941004c09c9004c09cf004c08f2004c0910004c
073b004c0683004c053e004c0694004c0637004c0585004c0647004c0647
004c0557004c0557004c060c004c060b004c0617004c075b004c077b004c
079e004c07fa004c077b004c0813004c079e004c078e004c09e4004c09d7
004c068a004c048a004c071e004c06a4004c074a004c0788004c0865004c
084a004c0720004c06a8004c0720004c04ad004c0722004c0453004c0688
004c0688004c04a5004c04a5004c0688004c0688004c0405004c0405004c
0720004c051a004c0720004c0720004c05f5004c0720004c0930004c091a
004c04ba004c04cd004c064b004c070a004c0825004c067a004c0624004c
04e1004c051c004c04a5004c055a004c04ce004c04a5004c04a5004c04ba
004c04ba004c045e004c045e004c052e004c0570004c0626004c0626004c
05f5004c0668004c08f0004c07ed004c0960003b0000ffaa0000ff770410
01a6041000cc04100057041000830410007604100090041000b30410004e
04100090024300bc034700790406005e0398005e03dd005d038e004d0329
003c03ea003b0364004c027000ea02700050027000230270002902700017
0270004e0270004c0270001a02700061026600fa0266007d026600360266
0050026600420266006d0266006e0266002c0266007f0758002807d10028
0344ff6103afff630464ff640481ff6107b70028081d002807550028077a
0028075d003b0812002807a7002808160028075d003b07a70028075b0028
07a70028077b002806b60028075d003b07a7002807b70028078600280816
00280934002809ad00280993002809d8002809720028099400280957003c
09ec00280979002809d200280957003c097900280982002809c10028099d
002808a300280957003c09790028099300280963002809d20028028fff78
0091fe4401a1fe4e0203fe4e0313fe530373fe56045afe3c04effe470570
fe40058efe520453fe3e0472fe3f0284fe2e01e8fe4a008afe0901f9fe4b
017dfdc900cdfdcb018ffdda0191fddc009dfe3c009dfe3c0152fe36014f
fe3a0181fe4e02c0fe4802e0fe480303fe48035ffe4802e0fe480378fe48
0303fe480338fe4e0398fe4f06e2003c06e2003c06e2003c06e2003c06e2
003c06e2003c08e8002808e8002808e8002808e8002808e8002808e80028
0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000
ffba072cfff104d4ffba0410009a03980064027000270266005d0598fe47
058afe4604b100ac040e00ac0669004c0669004c0669004c01f6ffa801f6
ffa8037dffa80251ffa80251ffa8036effa806e2004c06e2004c06e2004c
0358000003a9000006c8004c02dbffa80351ffa8072f004c04f9004c02db
ffa80351ffa80506004c045b004c01f6ffa80251ffa80495004c055b004c
01f6ffa80251ffa80497004c0373000002dbffa801f6ffa801f6ff3301f6
ff2201f6ffa801f6ffa401f6ff920251ffa80251ffa40251ff9201fbffa8
01fbffa8037fffa801fbffa801fbffa80233ffa80233ffa80381ffa80233
ffa80233ffa801fbffa801fbff3301fbff2201fbffa801fbffa401fbff92
0233ffa80233ffa40233ff920000fdaa0000fe5f0000ff200000ff110000
ff220000ff220000fd2d0000fc330000fc410000fcd80000fde30000fd49
0000feaf0000fe5e0000fdaa0000fe5e0000ff200000ff110000ff250000
ff250000fd2d0000fc410000fc500000fcf10000fde30000fd490000feaf
0000fe0e0000ff6a0000fe8c0000ff1f0000ff2a04dc01180a2f002d0a2f
002d051900aa04fb00aa04ff006404f7006404fb00aa053500a0046700b4
04f100aa060500aa04ff006404a100b4036700b4065500b4056400a004c9
0096045900140528009004f700640526002a053d00aa0511008c04f7ffe2
04e7007d04fb00aa04d8007305a0005f05350096053d00aa04fb00aa04e3
006404c1006404b500aa0511008c038d00b405cd006e051600000561006e
0557005a01ff008c01ff002a01c2ffe70258fffe01d30023028a000a0000
fc4006640093043400990485006004880099043400930435006003b90099
0434009905b00099048500600434009901d80099066a0099043400600434
0093043400990434007604340099043400500434009301d8ffc30434ffa1
0371001f04340099028c00260664009903fe0073044a0099043400930434
0093065e0093043400990434005f02ed0093065e00930463000e0442005f
050d0044054500930240fff7066400990868009308680093086800930868
00930a3a0093022400bb027300450205009704ed003c0802008b0802008b
04b7007104cf00690500009b050c008704b4009b066a009b04b5fff1052b
00690385fff1046d00ad061f009b049d005504b400af059700680515fff1
04ecfff106250055046f00af046400af05e300680587005503ee001404c9
00af0479005f0492008c047d00af05440069049d0055040200b00439006e
0478007304c700550625009b034800b00544009b046e005404a1009b0544
00280439005f03c90040039e003c044c006403de0037063a006e03b6003c
03a800320527ffd806690064040a006e0352ffd807bf006e041d0064041d
007d05a4006e03a8002903e3001405a6006e03fc007d05bc0055045dffd8
061d005503b6003c05a4006e0405006e041d0064040a007d04470069041d
006403e3005003be0000041d007d04df000a036f0014043b0055044d0073
0339ffba0339ffba03c40050069b006403b100460405007d04380064044a
006903fd007802ac00500393003204390069044c0064044f0028049e0064
049e0064069a00640495005004880060060800140721008205050082044b
002808c1006e04c2006404c0009606960082044b002804bb005006660078
0497009605e2005a0526ffd806a0005504a9005e0650006904bd006404b3
00500455009604eb008204ae005004520055049a002204b7009604cd001e
0413000105090082055f007304460032044600320413005a0659006904c6
006404bd0096049e006404b0006804c60064055f0073054d007804210098
04340094043400980442005f04340098066400980430ff7a0660009402e7
fff604300094066400980491005904340098066400940488ffe20488ffe2
06600094043400940433009806640094063f005f0373ffd9043400980434
0094043400940434009804340098064c005f066400980422009804340098
041dffe806620098042c00980375005004340094042e00940665005f0322
004b030a004600>
<000000000000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000017e0000017e0000017e0000017e0000017e
0000017e0000017e0000017e0000031a0000044a0000044a0000044a0000
044a0000044a0000044a0000044a0000044a0000044a0000044a0000044a
0000044a0000044a0000044a0000044a0000044a0000044a0000044a0000
044a0000044a000005420000054200000542000005420000054200000542
000005420000054200000542000005e8000005e8000005e8000005e80000
05e8000005e8000005e8000005e8000005e8000005e8000005e8000005e8
000005e8000005e8000005e8000005e8000005e8000005e8000005e80000
05e8000005e8000005e80000073e0000073e0000073e0000073e0000073e
0000073e0000085000000850000008500000085000000850000008500000
085000000850000008500000085000000850000008500000096800000968
000009680000096800000968000009680000096800000b4e00000b4e0000
0b4e00000b4e00000b4e00000b4e00000b4e00000b4e00000b4e00000b4e
00000b4e00000b4e00000b4e00000b4e00000b4e00000b4e00000b4e0000
0b4e00000b4e00000b4e00000b4e00000c4a00000c4a00000c4a00000c4a
00000c4a00000c4a00000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000d3800000d3800000d3800000d380000
0d3800000d3800000d3800000d3800000d3800000d3800000d3800000d38
00000d3800000d3800000d3800000e8e00000e8e00000e8e00000e8e0000
0e8e00000e8e00000e8e00000e8e00000e8e00000e8e00000fec00000fec
00000fec00000fec0000116a0000116a0000116a0000116a0000116a0000
116a0000116a0000116a0000116a0000116a0000116a0000116a0000116a
0000116a0000116a0000116a0000116a0000116a0000116a0000116a0000
116a0000116a0000116a0000116a0000116a0000116a0000116a0000116a
0000116a0000116a0000116a0000116a0000116a0000116a0000116a0000
116a0000116a0000116a0000116a0000116a0000116a0000116a0000116a
0000116a0000116a0000116a0000116a0000116a0000116a0000116a0000
138a0000138a0000138a0000138a0000138a0000138a0000138a0000138a
0000138a0000138a0000138a0000138a0000138a00001496000014960000
149600001496000014960000149600001496000014960000149600001496
000014960000149600001496000014960000149600001496000014960000
14960000152c0000152c0000152c0000152c0000152c0000152c0000152c
000016720000167200001672000016720000167200001672000016720000
17b0000017b0000017b0000017b0000017b0000017b0000017b0000017b0
000017b0000017b0000017b0000017b00000190e0000190e0000190e0000
190e0000190e0000190e0000190e0000190e0000190e0000190e0000190e
0000190e0000190e0000190e0000190e0000190e0000190e00001a320000
1a3200001a3200001a3200001a3200001a3200001a3200001a3200001a32
00001a3200001a3200001a3200001a3200001a3200001a3200001a320000
1a3200001a3200001a3200001a3200001a3200001a3200001a3200001a32
00001a3200001a3200001a3200001a3200001a3200001a3200001a320000
1a3200001a3200001a3200001a3200001a3200001a3200001a3200001a32
00001a3200001a3200001a3200001a3200001a3200001b7000001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a
00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a00001c5a0000
1c5a00001c5a00001c5a00001c5a00001de200001de20000205000002050
000020500000205000002050000020500000205000002050000020500000
205000002050000020500000205000002050000020500000205000002050
000020500000205000002050000020500000205000002050000020500000
205000002050000020500000205000002050000020500000205000002050
000021d80000236c000024e20000270c000028c000002a6600002a760000
2bd000002be000002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c
00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c00002d7c0000
2d7c00002d7c00002d7c000100001b2a043a00170118000800020010002f
00870000123624eb000700010000000e00ae000000030000000002100000
000000030000000700760210000100000000000001080286000100000000
0003000e038e0001000000000004000e039c0001000000000006000e03aa
0001000000000007003b03b80003000104090000021203f3000300010409
0001001c06050003000104090002000e06210003000104090003001c062f
0003000104090004001c064b0003000104090006001c0667000300010409
00070076068300a9002000320030003100380020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002ea92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e43564f4f4c5a2b43616c69627269
43564f4f4c5a2b43616c6962726943564f4f4c5a2b43616c696272694361
6c6962726920697320612074726164656d61726b206f6620746865204d69
63726f736f66742067726f7570206f6620636f6d70616e6965732e00a900
2000320030003100380020004d006900630072006f0073006f0066007400
200043006f00720070006f0072006100740069006f006e002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
7600650064002e000d000a0048006500620072006500770020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200063006f0070007900720069006700680074002000
a9002000320030003000330020002600200032003000300037002c002000
520061006c00700068002000480061006e0063006f0063006b0020002600
20004a006f0068006e00200048007500640073006f006e002e0020005400
68006900730020006c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
48006500620072006500770020006900730020006f00700065006e002000
73006f007500720063006500200073006f00660074007700610072006500
200075006e00640065007200200074006800650020004d00490054002000
4c006900630065006e00730065003b002000730065006500200065006d00
62006500640064006500640020006c006900630065006e00730065002000
6400650073006300720069007000740069006f006e00200066006f007200
2000640065007400610069006c0073002e00430056004f004f004c005a00
2b00430061006c00690062007200690052006500670075006c0061007200
430056004f004f004c005a002b00430061006c0069006200720069004300
56004f004f004c005a002b00430061006c00690062007200690043005600
4f004f004c005a002b00430061006c006900620072006900430061006c00
690062007200690020006900730020006100200074007200610064006500
6d00610072006b0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000670072006f007500700020006f006600
200063006f006d00700061006e006900650073002e0000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[11645 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

4 0 3 <> UZAAAA+Calibri AddT42Char 
4 9442 1007 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>UZAAAA+Calibri AddT42Char 
4 1512 69 <000100acfffa047e0511003d00a6b0852b58b3270f0f14b8ffe8b310014d
14b8ffe8b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b
014d14b80211401e1e0a2e2e321810014d32180f014d32180d014d32100c
014d32180b014d32b802114010001e38520a2e0f27041922511955065400
3f3f3f1217393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f3331
301b400e38520a2e0f27041922511955065400183f3f3f1217393f303159
25140e022323222e0227012626272316161511140e0223222e0235113436
3333321e0217011e03173326263511343e0233321e0215047e0d151a0d37
1a27232315fe6820411c02020208131f18181f12082c1a521d271f1d1101
3a1d3632311801020108131f191620120847141c12080b1d322702e0397d
3b48964afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4f
ab4f02be070c090404090c07>UZAAAA+Calibri AddT42Char 
4 2408 94 <00010047ffed0363052100490128b0852b58b90041ffe8b40f10014c41b8
fff0b30d014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d
41b8022c402b32401314014c324011014d243224320c1b180f10014c1b10
0d014d1b1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d
00b8ffc0b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb01
270037000a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c37
113711163cb8010cb5411b05295316b80129b10556003fed3f123939ed11
39392f2f2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b
2be12b2b2b2b2b31301bb1372eb80127b26c110ab80126b76c3711371116
293cb8010cb76c411b0529530516b80129b26c055600183f2b3f1239392b
1139392f2f2b2b30315901140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e060363
4377a15d416f573b170b04080c080e3350714a385d43243252696e685233
3b6991542b574d3c1306040203060b070b2f445d3a3650341a32536a6e6a
5333016b5b8e633216202218251f161d12072228231e375033374e3b3133
3e54714f517f562d0f191f130b111813121c13091c231d1d304225364e3c
32333d537100>UZAAAA+Calibri AddT42Char 
4 6706 454 <00010029fffa034b03bc002f00a4b0852b58b90031ffc040110b014d2f08
0b014d2e100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d
16b8fff0b60b014d34160109b8fff0402a0b014d00080b014d3c00013823
01360b010b2010014d0b200c014d0b0b31302949230b111d49114c054c00
3f3f3f1239393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b
2b2b1b400b2949230b111d49114c054c00183f3f3f1239393f3031592516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>UZAAAA+Calibri AddT42Char 
4 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>UZAAAA+Calibri AddT42Char 
UZAAAA+Calibri /CharStrings get begin
/space 3 def
/three 1007 def
/N 69 def
/S 94 def
/x 454 def
end
UZAAAA+Calibri /Encoding get
dup 32 /space put
dup 51 /three put
dup 78 /N put
dup 83 /S put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/DLEHSZ+Calibri /UZAAAA+Calibri findfont ct_VMDictPut
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 18{/.notdef}rp /three 26{/.notdef}rp /N 4{/.notdef}rp /S 
36{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
119.793 118.65 mo
(SN 3x3)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 8664 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>DLEHSZ+Calibri AddT42Char 
4 9068 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>DLEHSZ+Calibri AddT42Char 
4 7258 970 <0002006bffed03bd05200034004800c6b0852b58b9004affc040170f024d
604a012b753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a
35016a35014b35013a35012b350135b80243b670000120000100b8ffe0b3
0f014d00b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff303005
26b80100b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b
5d5de15d5d5d5d5d12392f10e15d5d5d5d5d3231305d2b1b4009303aff6c
3030051326b80100b46c13590544b80115b26c055f00183f2b3f2b12392f
2b30315901140e0223222e0435343e0433321e0615140e0223222e022322
0e02073e0333321e0207342e0223220e0207141e0233323e0203bd346ca6
71517c5c3d2510122e4f77a66e254c402c0e07040201070b090b26364d33
5d865529031a414d563169905926ae17365a42254a453f1a213f5e3f405e
3e1d01a3559f7949284a6c8aa45e53aa9e8b673c090f120b0d0f130e121a
10080e110e4c80a95c0f1e180f396589603a5f42240d171f1281ae692d30
5165>DLEHSZ+Calibri AddT42Char 
4 10854 1010 <ffff006bffed03bd0520020603ca0000>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/one 1005 def
/two 1006 def
/six 1010 def
end
DLEHSZ+Calibri /Encoding get
dup 49 /one put
dup 50 /two put
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three 2{/.notdef}rp /six 
23{/.notdef}rp /N 4{/.notdef}rp /S 36{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
97.7961 73.017 mo
(112x112x16)
[-7.07953 -7.0809 -7.07953 -6.05334 -7.07953 -7.14102 -7.13962 -6.05334 -7.13965 0 ]ysh
135.039 72.4578 mo
(112x112x16)
[-7.07953 -7.0809 -7.07953 -6.05334 -7.07953 -7.14102 -7.13962 -6.05334 -7.13965 0 ]ysh
250.47 135.75 mo
248.747 135.75 247.35 134.353 247.35 132.63 cv
247.35 38.07 li
247.35 36.347 248.747 34.95 250.47 34.95 cv
262.95 34.95 li
264.673 34.95 266.07 36.347 266.07 38.07 cv
266.07 132.63 li
266.07 134.353 264.673 135.75 262.95 135.75 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
250.47 135.75 mo
248.747 135.75 247.35 134.353 247.35 132.63 cv
247.35 38.07 li
247.35 36.347 248.747 34.95 250.47 34.95 cv
262.95 34.95 li
264.673 34.95 266.07 36.347 266.07 38.07 cv
266.07 132.63 li
266.07 134.353 264.673 135.75 262.95 135.75 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 3146 121 <00010030fffa03f60514002f004eb0852b58401d292f01292e0126180126
17012716012800012952230b111d5211550555003f3f3f1239393f313001
5d5d5d5d5d5d1b400b2952230b111d521155055500183f3f3f1239393f30
3159251616060623222e022701010e032322262636370101262636363332
1e021701013e033332161606070103e40d051229222024150b04fee0fedd
050c15241e21260f050d0161feaf0c071028231e26160a0601160114050a
13221d1f2711040cfeb03e161a0f0503080b090203fdfd090c0703050f1a
160253023f161b0f0403070d08fe1c01e4080d0703050e1b16fdc500>DLEHSZ+Calibri AddT42Char 
4 3384 272 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>DLEHSZ+Calibri AddT42Char 
4 4076 286 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>DLEHSZ+Calibri AddT42Char 
4 5002 349 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>DLEHSZ+Calibri AddT42Char 
4 5420 374 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>DLEHSZ+Calibri AddT42Char 
4 5746 381 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>DLEHSZ+Calibri AddT42Char 
4 6064 393 <00020099fe9403d503ca002a003d00b1b0852b58b53f3f0121360ab8fff0
b30d014d0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0a
b801f84017152b200d014d2b120c014d2b180f10014c2b180b014d2bb802
0a400900150a363521040530b80105b6264a1b49104f39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d1bb7
0a36352104052630b8010540096c264a1b49104f0539b80105b26c054d00
183f2b3f3f3f2b12173930315901140e0223222e022711140e0223222e02
3511343e0233321e0215153e0333321e0207342e0223220e020711161633
323e0203d53363925e2844414024081220191820130706121c14151b1207
294c4d512d628a5728ae15335640203e404627447a433e59371a01e976bc
834710223423fe3e080c080404080c0804e9090b080303080b09792a3e29
154c84af754581643c13294331fe9a53583c647c>DLEHSZ+Calibri AddT42Char 
4 6414 410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/X 121 def
/c 272 def
/e 286 def
/i 349 def
/n 374 def
/o 381 def
/p 393 def
/t 410 def
end
DLEHSZ+Calibri /Encoding get
dup 88 /X put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three 2{/.notdef}rp /six 
23{/.notdef}rp /N 4{/.notdef}rp /S 4{/.notdef}rp /X 10{/.notdef}rp /c 
/.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
263.406 121.099 mo
(Xception)
[-10.3795 -8.45963 -9.96005 -10.3795 -6.71341 -4.55951 -10.5493 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 9996 1008 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00>DLEHSZ+Calibri AddT42Char 
4 10432 1009 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/four 1008 def
/five 1009 def
end
DLEHSZ+Calibri /Encoding get
dup 52 /four put
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three /four /five 
/six 23{/.notdef}rp /N 4{/.notdef}rp /S 4{/.notdef}rp /X 10{/.notdef}rp 
/c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 
/p 3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
242.873 60.5715 mo
(56X56x64)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08096 -6.05328 -7.08093 0 ]ysh
141.83 128.55 mo
140.129 128.55 138.75 127.171 138.75 125.47 cv
138.75 45.23 li
138.75 43.529 140.129 42.15 141.83 42.15 cv
154.15 42.15 li
155.851 42.15 157.23 43.529 157.23 45.23 cv
157.23 125.47 li
157.23 127.171 155.851 128.55 154.15 128.55 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
141.83 128.55 mo
140.129 128.55 138.75 127.171 138.75 125.47 cv
138.75 45.23 li
138.75 43.529 140.129 42.15 141.83 42.15 cv
154.15 42.15 li
155.851 42.15 157.23 43.529 157.23 45.23 cv
157.23 125.47 li
157.23 127.171 155.851 128.55 154.15 128.55 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -18 -18 0 0 0 ]msf
154.02 117.572 mo
(Xception)
[-9.35995 -7.61948 -8.94061 -9.41928 -5.99954 -4.14005 -9.48047 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
170.617 71.2991 mo
(112x112x16)
[-7.07953 -7.0809 -7.07953 -6.05334 -7.07953 -7.14102 -7.13962 -6.05334 -7.13965 0 ]ysh
178.02 128.55 mo
176.313 128.55 174.93 127.167 174.93 125.46 cv
174.93 45.24 li
174.93 43.533 176.313 42.15 178.02 42.15 cv
190.38 42.15 li
192.086 42.15 193.47 43.533 193.47 45.24 cv
193.47 125.46 li
193.47 127.167 192.086 128.55 190.38 128.55 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
178.02 128.55 mo
176.313 128.55 174.93 127.167 174.93 125.46 cv
174.93 45.24 li
174.93 43.533 176.313 42.15 178.02 42.15 cv
190.38 42.15 li
192.086 42.15 193.47 43.533 193.47 45.24 cv
193.47 125.46 li
193.47 127.167 192.086 128.55 190.38 128.55 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 10870 1011 <00010063fffa03af050e001f00f2b0852b58b90011ffe8400a1121014c11
1010014d11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8
fff8400a0b014d74110126110110b8ffe8400a1121014c101010014d10b8
ffe8b30f014d10b8fff0b30d014d10b8ffe8400b0b0c014c751001261001
06b8fff0b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ff
d8b40b014d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d
15b8ffe0b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2b
cd2b2b31305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b1bb2051a11b801
2db46c1a510b5500183f3f2b3230315901140e0207010e03232226263637
0121222635343e023321321e0203af03050906fe2e050f17241a22261102
0601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c0f0903
060d130d044a2824131c130906121c00>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/seven 1011 def
end
DLEHSZ+Calibri /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three /four /five 
/six /seven 22{/.notdef}rp /N 4{/.notdef}rp /S 4{/.notdef}rp /X 
10{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n 
/o /p 3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
192.207 118.65 mo
(SN 7x7)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
205.935 70.9671 mo
(112x112x16)
[-7.07953 -7.08093 -7.0795 -6.05334 -7.0795 -7.14105 -7.13965 -6.05328 -7.13965 0 ]ysh
214.25 128.55 mo
212.549 128.55 211.17 127.171 211.17 125.47 cv
211.17 45.23 li
211.17 43.529 212.549 42.15 214.25 42.15 cv
226.57 42.15 li
228.271 42.15 229.65 43.529 229.65 45.23 cv
229.65 125.47 li
229.65 127.171 228.271 128.55 226.57 128.55 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
214.25 128.55 mo
212.549 128.55 211.17 127.171 211.17 125.47 cv
211.17 45.23 li
211.17 43.529 212.549 42.15 214.25 42.15 cv
226.57 42.15 li
228.271 42.15 229.65 43.529 229.65 45.23 cv
229.65 125.47 li
229.65 127.171 228.271 128.55 226.57 128.55 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
228.414 118.65 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
286.89 135.75 mo
285.167 135.75 283.77 134.353 283.77 132.63 cv
283.77 38.07 li
283.77 36.347 285.167 34.95 286.89 34.95 cv
299.37 34.95 li
301.093 34.95 302.49 36.347 302.49 38.07 cv
302.49 132.63 li
302.49 134.353 301.093 135.75 299.37 135.75 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
286.89 135.75 mo
285.167 135.75 283.77 134.353 283.77 132.63 cv
283.77 38.07 li
283.77 36.347 285.167 34.95 286.89 34.95 cv
299.37 34.95 li
301.093 34.95 302.49 36.347 302.49 38.07 cv
302.49 132.63 li
302.49 134.353 301.093 135.75 299.37 135.75 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
301.144 118.639 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
278.62 60.5715 mo
(56X56x64)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08096 -6.05328 -7.08093 0 ]ysh
323.31 135.75 mo
321.587 135.75 320.19 134.353 320.19 132.63 cv
320.19 38.07 li
320.19 36.347 321.587 34.95 323.31 34.95 cv
335.79 34.95 li
337.513 34.95 338.91 36.347 338.91 38.07 cv
338.91 132.63 li
338.91 134.353 337.513 135.75 335.79 135.75 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
323.31 135.75 mo
321.587 135.75 320.19 134.353 320.19 132.63 cv
320.19 38.07 li
320.19 36.347 321.587 34.95 323.31 34.95 cv
335.79 34.95 li
337.513 34.95 338.91 36.347 338.91 38.07 cv
338.91 132.63 li
338.91 134.353 337.513 135.75 335.79 135.75 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
337.562 122.177 mo
(Xceptio)
[-10.3795 -8.45963 -9.96005 -10.3795 -6.71341 -4.55951 0 ]ysh
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
337.562 61.157 mo
(n)sh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
315.952 60.5715 mo
(56X56x64)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08096 -6.05328 -7.08093 0 ]ysh
359.73 135.75 mo
358.007 135.75 356.61 134.353 356.61 132.63 cv
356.61 38.07 li
356.61 36.347 358.007 34.95 359.73 34.95 cv
372.21 34.95 li
373.933 34.95 375.33 36.347 375.33 38.07 cv
375.33 132.63 li
375.33 134.353 373.933 135.75 372.21 135.75 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
359.73 135.75 mo
358.007 135.75 356.61 134.353 356.61 132.63 cv
356.61 38.07 li
356.61 36.347 358.007 34.95 359.73 34.95 cv
372.21 34.95 li
373.933 34.95 375.33 36.347 375.33 38.07 cv
375.33 132.63 li
375.33 134.353 373.933 135.75 372.21 135.75 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
373.98 118.639 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
352.457 60.5715 mo
(56X56x64)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08096 -6.05328 -7.08093 0 ]ysh
396.27 150.15 mo
394.481 150.15 393.03 148.699 393.03 146.91 cv
393.03 23.79 li
393.03 22.001 394.481 20.55 396.27 20.55 cv
409.23 20.55 li
411.019 20.55 412.47 22.001 412.47 23.79 cv
412.47 146.91 li
412.47 148.699 411.019 150.15 409.23 150.15 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
396.27 150.15 mo
394.481 150.15 393.03 148.699 393.03 146.91 cv
393.03 23.79 li
393.03 22.001 394.481 20.55 396.27 20.55 cv
409.23 20.55 li
411.019 20.55 412.47 22.001 412.47 23.79 cv
412.47 146.91 li
412.47 148.699 411.019 150.15 409.23 150.15 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
410.758 118.615 mo
(SN 7x7)
[-11.04 -15.4799 -5.32794 -12.1801 -10.3799 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 8272 1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>DLEHSZ+Calibri AddT42Char 
4 7650 972 <00030052ffed03ba052100270037004701a4b0852b58b90036fff0b40f11
014c36b8fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34
b8fff0b40f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b3
0f014d49b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10
014c30b8fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d
014c28100f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e
180f014d14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38
100f10014c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8
ffe0b30f014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d
00b8ffc0b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f
10014c42b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b01
4d0a353d052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2b
d42b2b2b2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10
e12b2b2b2b31305d2b002b2b2b2b2b2b2b2b1b400f353d05192dfd6c1959
0545fd6c055f00183f2b3f2b12393930315901140e0223222e0235343e02
372e0335343e0233321e0215140e02071e0303342e0223220615141e0217
363613342e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c
5c402131639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c
656c2a224567443f5f3d1f85848083014c54835a2e2a52784d3d66564b22
1f45515c36447758332f516e3f335e544920234a555f025f2a4430196255
27433c391f347efda22e4b413d211f3e42492c616a6b>DLEHSZ+Calibri AddT42Char 
4 11216 1012 <ffff0052ffed03ba0521020603cc0000>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/zero 1004 def
/eight 1012 def
end
DLEHSZ+Calibri /Encoding get
dup 48 /zero put
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 21{/.notdef}rp /N 4{/.notdef}rp /S 
4{/.notdef}rp /X 10{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 
4{/.notdef}rp /n /o /p 3{/.notdef}rp /t 3{/.notdef}rp /x 
135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
388.324 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
433.41 150.15 mo
431.621 150.15 430.17 148.699 430.17 146.91 cv
430.17 23.79 li
430.17 22.001 431.621 20.55 433.41 20.55 cv
446.37 20.55 li
448.159 20.55 449.61 22.001 449.61 23.79 cv
449.61 146.91 li
449.61 148.699 448.159 150.15 446.37 150.15 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
433.41 150.15 mo
431.621 150.15 430.17 148.699 430.17 146.91 cv
430.17 23.79 li
430.17 22.001 431.621 20.55 433.41 20.55 cv
446.37 20.55 li
448.159 20.55 449.61 22.001 449.61 23.79 cv
449.61 146.91 li
449.61 148.699 448.159 150.15 446.37 150.15 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
446.576 121.075 mo
(Xception)
[-10.3795 -8.45963 -9.96005 -10.3795 -6.71341 -4.55951 -10.5493 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
425.505 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
470.55 150.15 mo
468.761 150.15 467.31 148.699 467.31 146.91 cv
467.31 23.79 li
467.31 22.001 468.761 20.55 470.55 20.55 cv
483.51 20.55 li
485.299 20.55 486.75 22.001 486.75 23.79 cv
486.75 146.91 li
486.75 148.699 485.299 150.15 483.51 150.15 cv
cp
.15845 1 1 .0960403 cmyk
ef
470.55 150.15 mo
468.761 150.15 467.31 148.699 467.31 146.91 cv
467.31 23.79 li
467.31 22.001 468.761 20.55 470.55 20.55 cv
483.51 20.55 li
485.299 20.55 486.75 22.001 486.75 23.79 cv
486.75 146.91 li
486.75 148.699 485.299 150.15 483.51 150.15 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
485.034 118.615 mo
(SN 3x3)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
463.53 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
507.69 150.15 mo
505.901 150.15 504.45 148.699 504.45 146.91 cv
504.45 23.79 li
504.45 22.001 505.901 20.55 507.69 20.55 cv
520.65 20.55 li
522.439 20.55 523.89 22.001 523.89 23.79 cv
523.89 146.91 li
523.89 148.699 522.439 150.15 520.65 150.15 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
507.69 150.15 mo
505.901 150.15 504.45 148.699 504.45 146.91 cv
504.45 23.79 li
504.45 22.001 505.901 20.55 507.69 20.55 cv
520.65 20.55 li
522.439 20.55 523.89 22.001 523.89 23.79 cv
523.89 146.91 li
523.89 148.699 522.439 150.15 520.65 150.15 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
522.172 118.615 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
500.024 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
544.83 150.15 mo
543.041 150.15 541.59 148.699 541.59 146.91 cv
541.59 23.79 li
541.59 22.001 543.041 20.55 544.83 20.55 cv
557.79 20.55 li
559.579 20.55 561.03 22.001 561.03 23.79 cv
561.03 146.91 li
561.03 148.699 559.579 150.15 557.79 150.15 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
544.83 150.15 mo
543.041 150.15 541.59 148.699 541.59 146.91 cv
541.59 23.79 li
541.59 22.001 543.041 20.55 544.83 20.55 cv
557.79 20.55 li
559.579 20.55 561.03 22.001 561.03 23.79 cv
561.03 146.91 li
561.03 148.699 559.579 150.15 557.79 150.15 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
559.309 118.615 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.38 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
538.049 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
581.97 150.15 mo
580.181 150.15 578.73 148.699 578.73 146.91 cv
578.73 23.79 li
578.73 22.001 580.181 20.55 581.97 20.55 cv
594.93 20.55 li
596.719 20.55 598.17 22.001 598.17 23.79 cv
598.17 146.91 li
598.17 148.699 596.719 150.15 594.93 150.15 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
581.97 150.15 mo
580.181 150.15 578.73 148.699 578.73 146.91 cv
578.73 23.79 li
578.73 22.001 580.181 20.55 581.97 20.55 cv
594.93 20.55 li
596.719 20.55 598.17 22.001 598.17 23.79 cv
598.17 146.91 li
598.17 148.699 596.719 150.15 594.93 150.15 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
595.127 121.075 mo
(Xception)
[-10.3795 -8.45963 -9.96005 -10.3795 -6.71341 -4.55951 -10.5493 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
575.959 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
619.11 150.15 mo
617.321 150.15 615.87 148.699 615.87 146.91 cv
615.87 23.79 li
615.87 22.001 617.321 20.55 619.11 20.55 cv
632.07 20.55 li
633.859 20.55 635.31 22.001 635.31 23.79 cv
635.31 146.91 li
635.31 148.699 633.859 150.15 632.07 150.15 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
619.11 150.15 mo
617.321 150.15 615.87 148.699 615.87 146.91 cv
615.87 23.79 li
615.87 22.001 617.321 20.55 619.11 20.55 cv
632.07 20.55 li
633.859 20.55 635.31 22.001 635.31 23.79 cv
635.31 146.91 li
635.31 148.699 633.859 150.15 632.07 150.15 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
633.585 118.615 mo
(SN 5x5)
[-11.04 -15.4799 -5.32794 -12.1801 -10.3799 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
612.453 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
656.25 150.15 mo
654.461 150.15 653.01 148.699 653.01 146.91 cv
653.01 23.79 li
653.01 22.001 654.461 20.55 656.25 20.55 cv
669.21 20.55 li
670.999 20.55 672.45 22.001 672.45 23.79 cv
672.45 146.91 li
672.45 148.699 670.999 150.15 669.21 150.15 cv
cp
.15845 1 1 .0960403 cmyk
ef
656.25 150.15 mo
654.461 150.15 653.01 148.699 653.01 146.91 cv
653.01 23.79 li
653.01 22.001 654.461 20.55 656.25 20.55 cv
669.21 20.55 li
670.999 20.55 672.45 22.001 672.45 23.79 cv
672.45 146.91 li
672.45 148.699 670.999 150.15 669.21 150.15 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
670.723 118.615 mo
(SN 3x3)
[-11.04 -15.4799 -5.32794 -12.1801 -10.3799 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
650.363 66.6494 mo
(28X28X160)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25555 -7.07953 -7.08093 0 ]ysh
693.39 164.55 mo
691.601 164.55 690.15 163.099 690.15 161.31 cv
690.15 9.39001 li
690.15 7.60095 691.601 6.15002 693.39 6.15002 cv
706.35 6.15002 li
708.139 6.15002 709.59 7.60095 709.59 9.39001 cv
709.59 161.31 li
709.59 163.099 708.139 164.55 706.35 164.55 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
693.39 164.55 mo
691.601 164.55 690.15 163.099 690.15 161.31 cv
690.15 9.39001 li
690.15 7.60095 691.601 6.15002 693.39 6.15002 cv
706.35 6.15002 li
708.139 6.15002 709.59 7.60095 709.59 9.39001 cv
709.59 161.31 li
709.59 163.099 708.139 164.55 706.35 164.55 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
706.541 121.109 mo
(Xception)
[-10.3795 -8.45963 -9.96005 -10.3795 -6.71341 -4.55951 -10.5493 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
686.77 66.6494 mo
(14x14x320)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12042 -7.13965 -7.08093 0 ]ysh
730.53 164.55 mo
728.741 164.55 727.29 163.099 727.29 161.31 cv
727.29 9.39001 li
727.29 7.60095 728.741 6.15002 730.53 6.15002 cv
743.49 6.15002 li
745.279 6.15002 746.73 7.60095 746.73 9.39001 cv
746.73 161.31 li
746.73 163.099 745.279 164.55 743.49 164.55 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
730.53 164.55 mo
728.741 164.55 727.29 163.099 727.29 161.31 cv
727.29 9.39001 li
727.29 7.60095 728.741 6.15002 730.53 6.15002 cv
743.49 6.15002 li
745.279 6.15002 746.73 7.60095 746.73 9.39001 cv
746.73 161.31 li
746.73 163.099 745.279 164.55 743.49 164.55 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
744.999 118.649 mo
(SN 7x7)
[-11.04 -15.4799 -5.32794 -12.1801 -10.3799 0 ]ysh
767.67 164.55 mo
765.881 164.55 764.43 163.099 764.43 161.31 cv
764.43 9.39001 li
764.43 7.60095 765.881 6.15002 767.67 6.15002 cv
780.63 6.15002 li
782.419 6.15002 783.87 7.60095 783.87 9.39001 cv
783.87 161.31 li
783.87 163.099 782.419 164.55 780.63 164.55 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
767.67 164.55 mo
765.881 164.55 764.43 163.099 764.43 161.31 cv
764.43 9.39001 li
764.43 7.60095 765.881 6.15002 767.67 6.15002 cv
780.63 6.15002 li
782.419 6.15002 783.87 7.60095 783.87 9.39001 cv
783.87 161.31 li
783.87 163.099 782.419 164.55 780.63 164.55 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
782.137 118.649 mo
(SN 7x7)
[-11.04 -15.4799 -5.32794 -12.1801 -10.3799 0 ]ysh
804.81 164.55 mo
803.021 164.55 801.57 163.099 801.57 161.31 cv
801.57 9.39001 li
801.57 7.60095 803.021 6.15002 804.81 6.15002 cv
817.77 6.15002 li
819.559 6.15002 821.01 7.60095 821.01 9.39001 cv
821.01 161.31 li
821.01 163.099 819.559 164.55 817.77 164.55 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
804.81 164.55 mo
803.021 164.55 801.57 163.099 801.57 161.31 cv
801.57 9.39001 li
801.57 7.60095 803.021 6.15002 804.81 6.15002 cv
817.77 6.15002 li
819.559 6.15002 821.01 7.60095 821.01 9.39001 cv
821.01 161.31 li
821.01 163.099 819.559 164.55 817.77 164.55 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -24 -24 0 0 0 ]msf
819.274 128.247 mo
(Xception)
[-12.4799 -10.1401 -11.94 -12.4799 -8.04016 -5.52008 -12.6478 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
722.952 66.6494 mo
(14x14x320)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12042 -7.13965 -7.08093 0 ]ysh
760.866 66.6494 mo
(14x14x320)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12042 -7.13965 -7.08093 0 ]ysh
797.578 66.6494 mo
(14x14x320)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12042 -7.13965 -7.08093 0 ]ysh
69.4101 132.15 mo
67.7091 132.15 66.3301 130.771 66.3301 129.07 cv
66.3301 41.63 li
66.3301 39.929 67.7091 38.55 69.4101 38.55 cv
81.7301 38.55 li
83.4311 38.55 84.8101 39.929 84.8101 41.63 cv
84.8101 129.07 li
84.8101 130.771 83.4311 132.15 81.7301 132.15 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
69.4101 132.15 mo
67.7091 132.15 66.3301 130.771 66.3301 129.07 cv
66.3301 41.63 li
66.3301 39.929 67.7091 38.55 69.4101 38.55 cv
81.7301 38.55 li
83.4311 38.55 84.8101 39.929 84.8101 41.63 cv
84.8101 129.07 li
84.8101 130.771 83.4311 132.15 81.7301 132.15 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 794 18 <00010061fff0040c051e00390097b0852b58b31c003b2bb8ffe8b310014d
2bb8fff0b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b
014d2bbe0233000e0018012f00210026012cb2135304bb012a0035003001
2eb10956003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c431301bb12118
b8012fb36c211326b8012cb46c13533504b8012ab36c350930b8012eb26c
095600183f2bc42b3f2bc42b30315925140e0623222e0235343e0233321e
0615140e0223222e0223220e0215141e0233323e0233321e02040c020508
14405f7b497ecb8f4d5396d17f386a5a461b08050304080b080e324f714f
568d64373563905b4d7351340f070a0603b71018120e1429271b54a4f19d
a1fcaf5c15202a1b0e131a12141c1309272f274586c17c7bbd7f41262f26
06111e00>DLEHSZ+Calibri AddT42Char 
4 1854 75 <00020063ffed04e8052100130027009db0852b58401a141810014d14100f
014d14140d014d14120c014d14180b014d14b80233400920003000800003
001eb8ffe8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb3
0c014d1eb8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb105
56003fed3fed012fe12b2b2b2b2bd45de12b2b2b2b2b31301bb10f19b801
29b46c0f530523b8012bb26c055600183f2b3f2b30315901140e0223222e
0235343e0233321e0207342e0223220e0215141e0233323e0204e84a93de
9492d58b444a94de948fd48d45b5275b987070985f29265a9772719a5e28
02969dfcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d
548fbc00>DLEHSZ+Calibri AddT42Char 
4 2894 115 <00010022fffa0468051400240086b0852b58401d24080b014d2824011a08
0b014d261a01281701260d012c19012c180119b8ffe8b40f10014c19b8ff
e8b40c0d014c18b8ffe8b40f10014c18b8ffe840120c0d014c1918191826
251f52180512520555003f3f12393f11120139392f2f2b2b2b2b3130005d
5d015d5d5d2b5d2b1bb71f5218051252055500183f3f12393f303159250e
0323222e0427012626363633321e02170133013e0333321616060702b704
0e19271d162118110c0703fe5908011228221c2112090401730101690308
14241e1f240d03081e0b0e0803010405080b0804b2161b0e0403080d0afb
bf043f0b0e0803050e1b1600>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/C 18 def
/O 75 def
/V 115 def
end
DLEHSZ+Calibri /Encoding get
dup 67 /C put
dup 79 /O put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 10{/.notdef}rp /C 10{/.notdef}rp /N 
/O 3{/.notdef}rp /S 2{/.notdef}rp /V /.notdef /X 10{/.notdef}rp 
/c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 
/p 3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
83.586 113.517 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
83.586 70.8557 mo
(3x3)
[-8.10617 -6.96069 0 ]ysh
841.79 132.15 mo
840.089 132.15 838.71 130.771 838.71 129.07 cv
838.71 41.63 li
838.71 39.929 840.089 38.55 841.79 38.55 cv
854.11 38.55 li
855.811 38.55 857.19 39.929 857.19 41.63 cv
857.19 129.07 li
857.19 130.771 855.811 132.15 854.11 132.15 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
841.79 132.15 mo
840.089 132.15 838.71 130.771 838.71 129.07 cv
838.71 41.63 li
838.71 39.929 840.089 38.55 841.79 38.55 cv
854.11 38.55 li
855.811 38.55 857.19 39.929 857.19 41.63 cv
857.19 129.07 li
857.19 130.771 855.811 132.15 854.11 132.15 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
855.947 114.174 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
855.947 71.5132 mo
(1X1)
[-8.10617 -8.33997 0 ]ysh
877.97 132.15 mo
876.269 132.15 874.89 130.771 874.89 129.07 cv
874.89 41.63 li
874.89 39.929 876.269 38.55 877.97 38.55 cv
890.29 38.55 li
891.991 38.55 893.37 39.929 893.37 41.63 cv
893.37 129.07 li
893.37 130.771 891.991 132.15 890.29 132.15 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
877.97 132.15 mo
876.269 132.15 874.89 130.771 874.89 129.07 cv
874.89 41.63 li
874.89 39.929 876.269 38.55 877.97 38.55 cv
890.29 38.55 li
891.991 38.55 893.37 39.929 893.37 41.63 cv
893.37 129.07 li
893.37 130.771 891.991 132.15 890.29 132.15 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 1098 38 <000100acfffa0354050e00270083b0852b58b10713b8ffe8b310014d13b8
fff0b30f014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d
13b80211b50d1d001e1d07b8010cb313131906b80128b322511955003f3f
ed12392fed012f2fc41139e12b2b2b2b2b3231301bb11307b8010cb56c13
13192206b80128b46c2251195500183f3f2b12392f2b30315901140e0223
211121321e0215140e02232111140e0223222e02351134363321321e0203
54040a0d07fe2601c0070d0a04040a0d07fe400814201a18221408291702
46070d0a0404c4131c1108fe4807101b15131b1109fde5070d070505070d
0704ae271f08121d>DLEHSZ+Calibri AddT42Char 
4 2128 87 <000200acfffa03c7050e001c0029009fb0852b58b12406b8ffe8b310014d
06b8fff0b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b
014d06b802114017111d1810014d1d100f014d1d100c0d014c1d200b014d
1db80232b2001125b8010ab306060c23b8010bb315510c55003f3fed1239
2fed012fd4e12b2b2b2b10e12b2b2b2b2b3231301bb10625b8010ab56c06
060c1523b8010bb46c15510c5500183f3f2b12392f2b30315901140e0223
2311140e0223222e02351134363321321e0407342e0223231133323e0203
c74077ad789309132119192114082a1a01152a4d696d4c29b53b575d2c9f
9b4e6746240393619c6e3cfe2e080c070505070c0804aa282207173f5c79
574f6a340efdf9284763>DLEHSZ+Calibri AddT42Char 
4 4458 336 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>DLEHSZ+Calibri AddT42Char 
4 5270 367 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/F 38 def
/P 87 def
/g 336 def
/l 367 def
end
DLEHSZ+Calibri /Encoding get
dup 70 /F put
dup 80 /P put
dup 103 /g put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 10{/.notdef}rp /C 2{/.notdef}rp /F 
7{/.notdef}rp /N /O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 
/.notdef /X 10{/.notdef}rp /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p 
3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
892.154 114.357 mo
(P)sh
892.154 106.379 mo
(ooling FC)
[-8.46005 -8.46005 -3.65262 -3.65262 -8.39438 -7.55972 -3.54041 -7.26025 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
60.8709 69.4197 mo
(224x224x3)
[-7.07953 -7.0809 -7.07953 -6.05334 -7.07953 -7.14099 -7.13965 -6.05334 0 ]ysh
833.993 55.0762 mo
(7x7x640)
[-7.07953 -6.05331 -7.07953 -6.05331 -7.08093 -7.13965 0 ]ysh
871.361 61.4371 mo
(7x7x1024)
[-7.07953 -6.05331 -7.07953 -6.05331 -7.08093 -7.13965 -7.13965 0 ]ysh
2.28 lw
84.78 85.32 mo
96.778 85.32 li
@
95.638 81.8997 mo
102.478 85.3197 li
95.638 88.7397 li
cp
ef
121.02 85.32 mo
133.018 85.32 li
@
131.878 81.8997 mo
138.718 85.3197 li
131.878 88.7397 li
cp
ef
157.2 85.32 mo
169.198 85.32 li
@
168.058 81.8997 mo
174.898 85.3197 li
168.058 88.7397 li
cp
ef
193.44 85.32 mo
205.438 85.32 li
@
204.298 81.8997 mo
211.138 85.3197 li
204.298 88.7397 li
cp
ef
229.62 85.32 mo
241.618 85.32 li
@
240.478 81.8997 mo
247.318 85.3197 li
240.478 88.7397 li
cp
ef
265.86 85.32 mo
277.858 85.32 li
@
276.718 81.8997 mo
283.558 85.3197 li
276.718 88.7397 li
cp
ef
302.46 85.32 mo
314.458 85.32 li
@
313.318 81.8997 mo
320.158 85.3197 li
313.318 88.7397 li
cp
ef
339.06 85.32 mo
351.058 85.32 li
@
349.918 81.8997 mo
356.758 85.3197 li
349.918 88.7397 li
cp
ef
375.3 85.32 mo
387.298 85.32 li
@
386.158 81.8997 mo
392.998 85.3197 li
386.158 88.7397 li
cp
ef
412.44 85.32 mo
424.438 85.32 li
@
423.298 81.8997 mo
430.138 85.3197 li
423.298 88.7397 li
cp
ef
450.12 85.32 mo
461.575 85.32 li
@
460.435 81.8997 mo
467.275 85.3197 li
460.435 88.7397 li
cp
ef
486.72 85.32 mo
498.718 85.32 li
@
497.578 81.8997 mo
504.418 85.3197 li
497.578 88.7397 li
cp
ef
523.74 85.32 mo
535.825 85.32 li
@
534.685 81.8997 mo
541.525 85.3197 li
534.685 88.7397 li
cp
ef
561 85.32 mo
572.998 85.32 li
@
571.858 81.8997 mo
578.698 85.3197 li
571.858 88.7397 li
cp
ef
598.14 85.32 mo
610.138 85.32 li
@
608.998 81.8997 mo
615.838 85.3197 li
608.998 88.7397 li
cp
ef
635.28 85.32 mo
647.278 85.32 li
@
646.138 81.8997 mo
652.978 85.3197 li
646.138 88.7397 li
cp
ef
672.42 85.32 mo
684.418 85.32 li
@
683.278 81.8997 mo
690.118 85.3197 li
683.278 88.7397 li
cp
ef
709.56 85.32 mo
721.558 85.32 li
@
720.418 81.8997 mo
727.258 85.3197 li
720.418 88.7397 li
cp
ef
746.7 85.32 mo
758.698 85.32 li
@
757.558 81.8997 mo
764.398 85.3197 li
757.558 88.7397 li
cp
ef
783.84 85.32 mo
795.838 85.32 li
@
794.698 81.8997 mo
801.538 85.3197 li
794.698 88.7397 li
cp
ef
820.98 85.32 mo
832.978 85.32 li
@
831.838 81.8997 mo
838.678 85.3197 li
831.838 88.7397 li
cp
ef
858.12 85.32 mo
870.118 85.32 li
@
868.978 81.8997 mo
875.818 85.3197 li
868.978 88.7397 li
cp
ef
107.4 302.31 mo
105.693 302.31 104.31 300.927 104.31 299.22 cv
104.31 219 li
104.31 217.293 105.693 215.91 107.4 215.91 cv
119.76 215.91 li
121.466 215.91 122.85 217.293 122.85 219 cv
122.85 299.22 li
122.85 300.927 121.466 302.31 119.76 302.31 cv
cp
.15845 1 1 .0960403 cmyk
ef
1.02 lw
107.4 302.31 mo
105.693 302.31 104.31 300.927 104.31 299.22 cv
104.31 219 li
104.31 217.293 105.693 215.91 107.4 215.91 cv
119.76 215.91 li
121.466 215.91 122.85 217.293 122.85 219 cv
122.85 299.22 li
122.85 300.927 121.466 302.31 119.76 302.31 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 382 17 <000300ac00000401050e001e002b003800f7b0852b58401a1f1810014d1f
100f014d1f100d014d1f180c014d1f200b014d1fb8022e40281a15401001
4d15400f014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c
200b014d2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0
b30f014d33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b8
0210400da00bc00b020b1a27f431310724b80109b2105134b8010bb10754
003fed3fed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b1239
2f2b2b39e12b2b2b2b2b31301b400a1a3127f46c3131071024b80109b46c
10510734b8010bb26c075400183f2b3f2b12392f2b3930315901140e0423
212226351134363321321e0215140e02071e0301342e0223231133323e02
13342e0223231133323e0204011f384f637149feae172929170126749463
32162b412a355c4528fefd1a385a4ab2c4435236194e25476b51cefa3b58
432601733d67523e2a151f270482271f2c547a4d2e544738120a35526e02
012f4c351cfe5d233b4ffddd3a583c1ffe381c375200>DLEHSZ+Calibri AddT42Char 
4 1346 47 <000100acfffa0158051400150061b0852b58b73f174f17af170300b8ffe8
b310014d00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8
ffe8b30b014d00ba0211000affc0b715014d0a10520555003f3f012f2be1
2b2b2b2b2b31305d1bb31052055500183f3f30315925140e0223222e0235
11343e0233321e02150158081421191822140809152117192114081a080c
070505070c0804da080c070505070c08>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/B 17 def
/I 47 def
end
DLEHSZ+Calibri /Encoding get
dup 66 /B put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 9{/.notdef}rp /B /C 2{/.notdef}rp 
/F 2{/.notdef}rp /I 4{/.notdef}rp /N /O /P 2{/.notdef}rp 
/S 2{/.notdef}rp /V /.notdef /X 10{/.notdef}rp /c /.notdef 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef 
/n /o /p 3{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
120.26 288.811 mo
(IB3 7x7)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
100.327 237.643 mo
(112x112x16)
[-7.07953 -7.08093 -7.0795 -6.05334 -7.0795 -7.14105 -7.13965 -6.05331 -7.13962 0 ]ysh
136.731 237.643 mo
(112x112x16)
[-7.07953 -7.08093 -7.0795 -6.05334 -7.0795 -7.14105 -7.13965 -6.05331 -7.13962 0 ]ysh
252.27 309.51 mo
250.547 309.51 249.15 308.113 249.15 306.39 cv
249.15 211.83 li
249.15 210.107 250.547 208.71 252.27 208.71 cv
264.75 208.71 li
266.473 208.71 267.87 210.107 267.87 211.83 cv
267.87 306.39 li
267.87 308.113 266.473 309.51 264.75 309.51 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
252.27 309.51 mo
250.547 309.51 249.15 308.113 249.15 306.39 cv
249.15 211.83 li
249.15 210.107 250.547 208.71 252.27 208.71 cv
264.75 208.71 li
266.473 208.71 267.87 210.107 267.87 211.83 cv
267.87 306.39 li
267.87 308.113 266.473 309.51 264.75 309.51 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
265.193 288.796 mo
(IB3 5x5)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
244.66 234.33 mo
(56X56x32)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -6.05331 -7.08093 0 ]ysh
143.63 302.31 mo
141.929 302.31 140.55 300.931 140.55 299.23 cv
140.55 218.99 li
140.55 217.289 141.929 215.91 143.63 215.91 cv
155.95 215.91 li
157.651 215.91 159.03 217.289 159.03 218.99 cv
159.03 299.23 li
159.03 300.931 157.651 302.31 155.95 302.31 cv
cp
.62768 .28513 0 0 cmyk
ef
143.63 302.31 mo
141.929 302.31 140.55 300.931 140.55 299.23 cv
140.55 218.99 li
140.55 217.289 141.929 215.91 143.63 215.91 cv
155.95 215.91 li
157.651 215.91 159.03 217.289 159.03 218.99 cv
159.03 299.23 li
159.03 300.931 157.651 302.31 155.95 302.31 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
156.467 288.811 mo
(IB3 3x3)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
171.482 230.449 mo
(56x56x32)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12045 -7.13962 0 ]ysh
179.87 310.59 mo
178.169 310.59 176.79 309.211 176.79 307.51 cv
176.79 212.87 li
176.79 211.169 178.169 209.79 179.87 209.79 cv
192.19 209.79 li
193.891 209.79 195.27 211.169 195.27 212.87 cv
195.27 307.51 li
195.27 309.211 193.891 310.59 192.19 310.59 cv
cp
.15845 1 1 .0960403 cmyk
ef
179.87 310.59 mo
178.169 310.59 176.79 309.211 176.79 307.51 cv
176.79 212.87 li
176.79 211.169 178.169 209.79 179.87 209.79 cv
192.19 209.79 li
193.891 209.79 195.27 211.169 195.27 212.87 cv
195.27 307.51 li
195.27 309.211 193.891 310.59 192.19 310.59 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
192.708 289.876 mo
(IB3 7x7)
[-5.03497 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
207.689 230.449 mo
(56x56x32)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12045 -7.13962 0 ]ysh
216.06 310.59 mo
214.353 310.59 212.97 309.207 212.97 307.5 cv
212.97 212.88 li
212.97 211.173 214.353 209.79 216.06 209.79 cv
228.42 209.79 li
230.126 209.79 231.51 211.173 231.51 212.88 cv
231.51 307.5 li
231.51 309.207 230.126 310.59 228.42 310.59 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
216.06 310.59 mo
214.353 310.59 212.97 309.207 212.97 307.5 cv
212.97 212.88 li
212.97 211.173 214.353 209.79 216.06 209.79 cv
228.42 209.79 li
230.126 209.79 231.51 211.173 231.51 212.88 cv
231.51 307.5 li
231.51 309.207 230.126 310.59 228.42 310.59 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
228.933 289.876 mo
(IB3 5x5)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
288.69 309.51 mo
286.967 309.51 285.57 308.113 285.57 306.39 cv
285.57 211.83 li
285.57 210.107 286.967 208.71 288.69 208.71 cv
301.17 208.71 li
302.893 208.71 304.29 210.107 304.29 211.83 cv
304.29 306.39 li
304.29 308.113 302.893 309.51 301.17 309.51 cv
cp
.15845 1 1 .0960403 cmyk
ef
288.69 309.51 mo
286.967 309.51 285.57 308.113 285.57 306.39 cv
285.57 211.83 li
285.57 210.107 286.967 208.71 288.69 208.71 cv
301.17 208.71 li
302.893 208.71 304.29 210.107 304.29 211.83 cv
304.29 306.39 li
304.29 308.113 302.893 309.51 301.17 309.51 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
301.611 288.796 mo
(IB3 7x7)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
280.407 234.33 mo
(56X56x32)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -6.05331 -7.08093 0 ]ysh
325.05 317.01 mo
323.327 317.01 321.93 315.613 321.93 313.89 cv
321.93 204.93 li
321.93 203.207 323.327 201.81 325.05 201.81 cv
337.53 201.81 li
339.253 201.81 340.65 203.207 340.65 204.93 cv
340.65 313.89 li
340.65 315.613 339.253 317.01 337.53 317.01 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
325.05 317.01 mo
323.327 317.01 321.93 315.613 321.93 313.89 cv
321.93 204.93 li
321.93 203.207 323.327 201.81 325.05 201.81 cv
337.53 201.81 li
339.253 201.81 340.65 203.207 340.65 204.93 cv
340.65 313.89 li
340.65 315.613 339.253 317.01 337.53 317.01 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
337.984 289.08 mo
(IB6 3x3)
[-5.03491 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
317.738 234.33 mo
(28x28x40)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
361.47 317.07 mo
359.747 317.07 358.35 315.673 358.35 313.95 cv
358.35 204.99 li
358.35 203.267 359.747 201.87 361.47 201.87 cv
373.95 201.87 li
375.673 201.87 377.07 203.267 377.07 204.99 cv
377.07 313.95 li
377.07 315.673 375.673 317.07 373.95 317.07 cv
cp
.697719 .930846 0 .00155642 cmyk
ef
361.47 317.07 mo
359.747 317.07 358.35 315.673 358.35 313.95 cv
358.35 204.99 li
358.35 203.267 359.747 201.87 361.47 201.87 cv
373.95 201.87 li
375.673 201.87 377.07 203.267 377.07 204.99 cv
377.07 313.95 li
377.07 315.673 375.673 317.07 373.95 317.07 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
374.401 289.142 mo
(IB6 )
[-5.03494 -10.8692 -10.1299 0 ]ysh
374.401 258.653 mo
(5x5)
[-10.1399 -8.63135 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
354.244 234.33 mo
(28x28x40)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
398.13 317.01 mo
396.341 317.01 394.89 315.559 394.89 313.77 cv
394.89 205.05 li
394.89 203.261 396.341 201.81 398.13 201.81 cv
411.09 201.81 li
412.879 201.81 414.33 203.261 414.33 205.05 cv
414.33 313.77 li
414.33 315.559 412.879 317.01 411.09 317.01 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
398.13 317.01 mo
396.341 317.01 394.89 315.559 394.89 313.77 cv
394.89 205.05 li
394.89 203.261 396.341 201.81 398.13 201.81 cv
411.09 201.81 li
412.879 201.81 414.33 203.261 414.33 205.05 cv
414.33 313.77 li
414.33 315.559 412.879 317.01 411.09 317.01 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
411.309 289.08 mo
(IB6 3x3)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
390.107 237.469 mo
(28X28X40)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
435.09 316.95 mo
433.301 316.95 431.85 315.499 431.85 313.71 cv
431.85 204.99 li
431.85 203.201 433.301 201.75 435.09 201.75 cv
448.05 201.75 li
449.839 201.75 451.29 203.201 451.29 204.99 cv
451.29 313.71 li
451.29 315.499 449.839 316.95 448.05 316.95 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
435.09 316.95 mo
433.301 316.95 431.85 315.499 431.85 313.71 cv
431.85 204.99 li
431.85 203.201 433.301 201.75 435.09 201.75 cv
448.05 201.75 li
449.839 201.75 451.29 203.201 451.29 204.99 cv
451.29 313.71 li
451.29 315.499 449.839 316.95 448.05 316.95 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
448.276 289.029 mo
(IB3 5x5)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
427.292 237.449 mo
(28X28X40)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
472.35 323.91 mo
470.561 323.91 469.11 322.459 469.11 320.67 cv
469.11 197.55 li
469.11 195.761 470.561 194.31 472.35 194.31 cv
485.31 194.31 li
487.099 194.31 488.55 195.761 488.55 197.55 cv
488.55 320.67 li
488.55 322.459 487.099 323.91 485.31 323.91 cv
cp
.15845 1 1 .0960403 cmyk
ef
472.35 323.91 mo
470.561 323.91 469.11 322.459 469.11 320.67 cv
469.11 197.55 li
469.11 195.761 470.561 194.31 472.35 194.31 cv
485.31 194.31 li
487.099 194.31 488.55 195.761 488.55 197.55 cv
488.55 320.67 li
488.55 322.459 487.099 323.91 485.31 323.91 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
485.5 288.771 mo
(IB3 7x7)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
464.792 236.879 mo
(28X28X80)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
509.49 323.91 mo
507.701 323.91 506.25 322.459 506.25 320.67 cv
506.25 197.55 li
506.25 195.761 507.701 194.31 509.49 194.31 cv
522.45 194.31 li
524.239 194.31 525.69 195.761 525.69 197.55 cv
525.69 320.67 li
525.69 322.459 524.239 323.91 522.45 323.91 cv
cp
.15845 1 1 .0960403 cmyk
ef
509.49 323.91 mo
507.701 323.91 506.25 322.459 506.25 320.67 cv
506.25 197.55 li
506.25 195.761 507.701 194.31 509.49 194.31 cv
522.45 194.31 li
524.239 194.31 525.69 195.761 525.69 197.55 cv
525.69 320.67 li
525.69 322.459 524.239 323.91 522.45 323.91 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
522.638 288.771 mo
(IB3 7x7)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
501.9 237.449 mo
(28X28X80)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
546.63 323.91 mo
544.841 323.91 543.39 322.459 543.39 320.67 cv
543.39 197.55 li
543.39 195.761 544.841 194.31 546.63 194.31 cv
559.59 194.31 li
561.379 194.31 562.83 195.761 562.83 197.55 cv
562.83 320.67 li
562.83 322.459 561.379 323.91 559.59 323.91 cv
cp
.62768 .28513 0 0 cmyk
ef
546.63 323.91 mo
544.841 323.91 543.39 322.459 543.39 320.67 cv
543.39 197.55 li
543.39 195.761 544.841 194.31 546.63 194.31 cv
559.59 194.31 li
561.379 194.31 562.83 195.761 562.83 197.55 cv
562.83 320.67 li
562.83 322.459 561.379 323.91 559.59 323.91 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
559.776 288.771 mo
(IB3 3x3)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
539.836 237.449 mo
(28X28X80)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
583.77 323.91 mo
581.981 323.91 580.53 322.459 580.53 320.67 cv
580.53 197.55 li
580.53 195.761 581.981 194.31 583.77 194.31 cv
596.73 194.31 li
598.519 194.31 599.97 195.761 599.97 197.55 cv
599.97 320.67 li
599.97 322.459 598.519 323.91 596.73 323.91 cv
cp
.689113 .134463 0 0 cmyk
ef
583.77 323.91 mo
581.981 323.91 580.53 322.459 580.53 320.67 cv
580.53 197.55 li
580.53 195.761 581.981 194.31 583.77 194.31 cv
596.73 194.31 li
598.519 194.31 599.97 195.761 599.97 197.55 cv
599.97 320.67 li
599.97 322.459 598.519 323.91 596.73 323.91 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
596.914 288.771 mo
(IB6 )
[-5.03494 -10.8692 -10.1299 0 ]ysh
596.914 258.282 mo
(7x7)
[-10.1399 -8.63135 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
576.553 236.879 mo
(28X28X80)
[-7.07953 -7.0809 -7.25558 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
620.97 331.29 mo
619.181 331.29 617.73 329.839 617.73 328.05 cv
617.73 190.53 li
617.73 188.741 619.181 187.29 620.97 187.29 cv
633.93 187.29 li
635.719 187.29 637.17 188.741 637.17 190.53 cv
637.17 328.05 li
637.17 329.839 635.719 331.29 633.93 331.29 cv
cp
.62768 .28513 0 0 cmyk
ef
620.97 331.29 mo
619.181 331.29 617.73 329.839 617.73 328.05 cv
617.73 190.53 li
617.73 188.741 619.181 187.29 620.97 187.29 cv
633.93 187.29 li
635.719 187.29 637.17 188.741 637.17 190.53 cv
637.17 328.05 li
637.17 329.839 635.719 331.29 633.93 331.29 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
634.131 289.003 mo
(IB3 3x3)
[-5.03491 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 11232 1013 <00020052ffed03a605210030004200e7b0852b584013292e012a05012904
012903012a2601260a0144b8ffc040200f024d60440131080d014d31100c
0d014c1d7a3101393149316931032b310131b8022c4009000e0e20007000
0200b8ffe0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff0
40120c0d014c753b01363b463b663b03243b013bb8022b400e2f25012540
f220200736f42a5318b80108b10756003fed3fed12392fed012f5de15d5d
5d2b2bc42b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d1b
400f2040f26c2020072a36f46c2a530718b80108b26c075600183f2b3f2b
12392f2b30315901140e0423222e0435343e0233321e0233323e02370606
23222e0235343e0233321e0407342e0223220e0215141e0233323603a614
30517ba9702b51412c140903060b080b283d5233618b582c023594606c93
5927326aa472517d5c402711af2242603f415c3b1c19385a424b8c02ba54
ac9f8b683b0b1012121f1a161a0e050f120f4b7ea65c1f303b668c53569b
7646294d6d8aa14680af6c302f4f64353b6244252d00>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/nine 1013 def
end
DLEHSZ+Calibri /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 8{/.notdef}rp /B /C 
2{/.notdef}rp /F 2{/.notdef}rp /I 4{/.notdef}rp /N /O /P 
2{/.notdef}rp /S 2{/.notdef}rp /V /.notdef /X 10{/.notdef}rp /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o /p 3{/.notdef}rp /t 3{/.notdef}rp /x 
135{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
612.312 236.339 mo
(14x14x96)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
657.51 331.29 mo
655.721 331.29 654.27 329.839 654.27 328.05 cv
654.27 190.53 li
654.27 188.741 655.721 187.29 657.51 187.29 cv
670.47 187.29 li
672.259 187.29 673.71 188.741 673.71 190.53 cv
673.71 328.05 li
673.71 329.839 672.259 331.29 670.47 331.29 cv
cp
.15845 1 1 .0960403 cmyk
ef
657.51 331.29 mo
655.721 331.29 654.27 329.839 654.27 328.05 cv
654.27 190.53 li
654.27 188.741 655.721 187.29 657.51 187.29 cv
670.47 187.29 li
672.259 187.29 673.71 188.741 673.71 190.53 cv
673.71 328.05 li
673.71 329.839 672.259 331.29 670.47 331.29 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
670.702 288.98 mo
(IB3 7x7)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
649.688 236.339 mo
(14x14x96)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
694.65 331.11 mo
692.861 331.11 691.41 329.659 691.41 327.87 cv
691.41 190.35 li
691.41 188.561 692.861 187.11 694.65 187.11 cv
707.61 187.11 li
709.399 187.11 710.85 188.561 710.85 190.35 cv
710.85 327.87 li
710.85 329.659 709.399 331.11 707.61 331.11 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
694.65 331.11 mo
692.861 331.11 691.41 329.659 691.41 327.87 cv
691.41 190.35 li
691.41 188.561 692.861 187.11 694.65 187.11 cv
707.61 187.11 li
709.399 187.11 710.85 188.561 710.85 190.35 cv
710.85 327.87 li
710.85 329.659 709.399 331.11 707.61 331.11 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
707.822 288.81 mo
(IB3 5x5)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
687.901 236.109 mo
(14x14x96)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12045 -7.13962 0 ]ysh
731.97 331.11 mo
730.181 331.11 728.73 329.659 728.73 327.87 cv
728.73 190.35 li
728.73 188.561 730.181 187.11 731.97 187.11 cv
744.93 187.11 li
746.719 187.11 748.17 188.561 748.17 190.35 cv
748.17 327.87 li
748.17 329.659 746.719 331.11 744.93 331.11 cv
cp
.62768 .28513 0 0 cmyk
ef
731.97 331.11 mo
730.181 331.11 728.73 329.659 728.73 327.87 cv
728.73 190.35 li
728.73 188.561 730.181 187.11 731.97 187.11 cv
744.93 187.11 li
746.719 187.11 748.17 188.561 748.17 190.35 cv
748.17 327.87 li
748.17 329.659 746.719 331.11 744.93 331.11 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
745.11 288.81 mo
(IB3 3x3)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
769.41 338.31 mo
767.621 338.31 766.17 336.859 766.17 335.07 cv
766.17 183.15 li
766.17 181.361 767.621 179.91 769.41 179.91 cv
782.37 179.91 li
784.159 179.91 785.61 181.361 785.61 183.15 cv
785.61 335.07 li
785.61 336.859 784.159 338.31 782.37 338.31 cv
cp
.697719 .930846 0 .00155642 cmyk
ef
769.41 338.31 mo
767.621 338.31 766.17 336.859 766.17 335.07 cv
766.17 183.15 li
766.17 181.361 767.621 179.91 769.41 179.91 cv
782.37 179.91 li
784.159 179.91 785.61 181.361 785.61 183.15 cv
785.61 335.07 li
785.61 336.859 784.159 338.31 782.37 338.31 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
782.603 288.806 mo
(IB6 5x5)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
725.322 236.109 mo
(14x14x96)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12045 -7.13962 0 ]ysh
762.649 240.415 mo
(14x14x192)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.0795 -6.12045 -7.13962 -7.08093 0 ]ysh
71.2101 305.91 mo
69.5091 305.91 68.1301 304.531 68.1301 302.83 cv
68.1301 215.39 li
68.1301 213.689 69.5091 212.31 71.2101 212.31 cv
83.5301 212.31 li
85.2311 212.31 86.6101 213.689 86.6101 215.39 cv
86.6101 302.83 li
86.6101 304.531 85.2311 305.91 83.5301 305.91 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
71.2101 305.91 mo
69.5091 305.91 68.1301 304.531 68.1301 302.83 cv
68.1301 215.39 li
68.1301 213.689 69.5091 212.31 71.2101 212.31 cv
83.5301 212.31 li
85.2311 212.31 86.6101 213.689 86.6101 215.39 cv
86.6101 302.83 li
86.6101 304.531 85.2311 305.91 83.5301 305.91 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
85.3726 287.276 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
85.3726 244.615 mo
(3x3)
[-8.10617 -6.96069 0 ]ysh
806.99 305.91 mo
805.289 305.91 803.91 304.531 803.91 302.83 cv
803.91 215.39 li
803.91 213.689 805.289 212.31 806.99 212.31 cv
819.31 212.31 li
821.011 212.31 822.39 213.689 822.39 215.39 cv
822.39 302.83 li
822.39 304.531 821.011 305.91 819.31 305.91 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
806.99 305.91 mo
805.289 305.91 803.91 304.531 803.91 302.83 cv
803.91 215.39 li
803.91 213.689 805.289 212.31 806.99 212.31 cv
819.31 212.31 li
821.011 212.31 822.39 213.689 822.39 215.39 cv
822.39 302.83 li
822.39 304.531 821.011 305.91 819.31 305.91 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
821.157 287.933 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
821.157 245.272 mo
(1X1)
[-8.10617 -8.33997 0 ]ysh
842.33 305.67 mo
840.629 305.67 839.25 304.291 839.25 302.59 cv
839.25 215.15 li
839.25 213.449 840.629 212.07 842.33 212.07 cv
854.65 212.07 li
856.351 212.07 857.73 213.449 857.73 215.15 cv
857.73 302.59 li
857.73 304.291 856.351 305.67 854.65 305.67 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
842.33 305.67 mo
840.629 305.67 839.25 304.291 839.25 302.59 cv
839.25 215.15 li
839.25 213.449 840.629 212.07 842.33 212.07 cv
854.65 212.07 li
856.351 212.07 857.73 213.449 857.73 215.15 cv
857.73 302.59 li
857.73 304.291 856.351 305.67 854.65 305.67 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
856.496 287.87 mo
(P)sh
856.496 279.892 mo
(ooling FC)
[-8.46005 -8.46005 -3.65262 -3.65262 -8.39438 -7.55972 -3.54041 -7.26025 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
60.485 234.046 mo
(224x224x3)
[-7.07953 -7.08093 -7.0795 -6.05334 -7.0795 -7.14105 -7.13965 -6.05331 0 ]ysh
799.202 228.846 mo
(7x7x320)
[-7.07953 -6.05331 -7.08093 -6.05331 -7.08093 -7.13962 0 ]ysh
835.704 234.969 mo
(7x7x1280)
[-7.07953 -6.05331 -7.07953 -6.05331 -7.08093 -7.13965 -7.13962 0 ]ysh
2.28 lw
86.58 259.08 mo
98.578 259.08 li
@
97.438 255.66 mo
104.278 259.08 li
97.438 262.5 li
cp
ef
122.82 259.08 mo
134.818 259.08 li
@
133.678 255.66 mo
140.518 259.08 li
133.678 262.5 li
cp
ef
159 259.08 mo
170.998 259.08 li
@
169.858 255.66 mo
176.698 259.08 li
169.858 262.5 li
cp
ef
195.18 259.08 mo
207.178 259.08 li
@
206.038 255.66 mo
212.878 259.08 li
206.038 262.5 li
cp
ef
231.42 259.08 mo
243.418 259.08 li
@
242.278 255.66 mo
249.118 259.08 li
242.278 262.5 li
cp
ef
267.6 259.08 mo
279.598 259.08 li
@
278.458 255.66 mo
285.298 259.08 li
278.458 262.5 li
cp
ef
304.26 259.08 mo
316.258 259.08 li
@
315.118 255.66 mo
321.958 259.08 li
315.118 262.5 li
cp
ef
340.86 259.08 mo
352.858 259.08 li
@
351.718 255.66 mo
358.558 259.08 li
351.718 262.5 li
cp
ef
377.1 259.08 mo
389.098 259.08 li
@
387.958 255.66 mo
394.798 259.08 li
387.958 262.5 li
cp
ef
414.3 259.372 mo
426.127 259.337 li
@
424.997 262.76 mo
431.827 259.32 li
424.977 255.92 li
cp
ef
451.92 259.08 mo
463.375 259.08 li
@
462.235 255.66 mo
469.075 259.08 li
462.235 262.5 li
cp
ef
488.52 259.08 mo
500.518 259.08 li
@
499.378 255.66 mo
506.218 259.08 li
499.378 262.5 li
cp
ef
525.54 259.08 mo
537.625 259.08 li
@
536.485 255.66 mo
543.325 259.08 li
536.485 262.5 li
cp
ef
562.8 259.08 mo
574.798 259.08 li
@
573.658 255.66 mo
580.498 259.08 li
573.658 262.5 li
cp
ef
599.94 259.08 mo
611.938 259.08 li
@
610.798 255.66 mo
617.638 259.08 li
610.798 262.5 li
cp
ef
637.08 259.08 mo
649.078 259.08 li
@
647.938 255.66 mo
654.778 259.08 li
647.938 262.5 li
cp
ef
674.16 259.08 mo
686.158 259.08 li
@
685.018 255.66 mo
691.858 259.08 li
685.018 262.5 li
cp
ef
711.3 259.08 mo
723.298 259.08 li
@
722.158 255.66 mo
728.998 259.08 li
722.158 262.5 li
cp
ef
748.44 259.08 mo
760.438 259.08 li
@
759.298 255.66 mo
766.138 259.08 li
759.298 262.5 li
cp
ef
786.18 259.08 mo
798.178 259.08 li
@
797.038 255.66 mo
803.878 259.08 li
797.038 262.5 li
cp
ef
822.42 258.84 mo
834.418 258.84 li
@
833.278 255.42 mo
840.118 258.84 li
833.278 262.26 li
cp
ef
108.9 484.83 mo
107.193 484.83 105.81 483.447 105.81 481.74 cv
105.81 401.52 li
105.81 399.813 107.193 398.43 108.9 398.43 cv
121.26 398.43 li
122.966 398.43 124.35 399.813 124.35 401.52 cv
124.35 481.74 li
124.35 483.447 122.966 484.83 121.26 484.83 cv
cp
.15845 1 1 .0960403 cmyk
ef
1.02 lw
108.9 484.83 mo
107.193 484.83 105.81 483.447 105.81 481.74 cv
105.81 401.52 li
105.81 399.813 107.193 398.43 108.9 398.43 cv
121.26 398.43 li
122.966 398.43 124.35 399.813 124.35 401.52 cv
124.35 481.74 li
124.35 483.447 122.966 484.83 121.26 484.83 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
121.776 471.328 mo
(IB3 7x7)
[-5.03494 -10.8693 -10.1299 -4.43555 -10.1299 -8.6413 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
101.717 428.945 mo
(112x112x16)
[-7.0795 -7.08093 -7.07953 -6.05334 -7.0795 -7.14102 -7.13965 -6.05334 -7.13962 0 ]ysh
137.785 428.945 mo
(112x112x16)
[-7.0795 -7.08093 -7.07953 -6.05334 -7.0795 -7.14102 -7.13965 -6.05334 -7.13962 0 ]ysh
253.77 492.03 mo
252.047 492.03 250.65 490.633 250.65 488.91 cv
250.65 394.35 li
250.65 392.627 252.047 391.23 253.77 391.23 cv
266.25 391.23 li
267.973 391.23 269.37 392.627 269.37 394.35 cv
269.37 488.91 li
269.37 490.633 267.973 492.03 266.25 492.03 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
253.77 492.03 mo
252.047 492.03 250.65 490.633 250.65 488.91 cv
250.65 394.35 li
250.65 392.627 252.047 391.23 253.77 391.23 cv
266.25 391.23 li
267.973 391.23 269.37 392.627 269.37 394.35 cv
269.37 488.91 li
269.37 490.633 267.973 492.03 266.25 492.03 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
266.71 471.313 mo
(IB3 5x5)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
245.017 426.041 mo
(56X56x32)
[-7.07953 -7.08093 -7.25558 -7.07953 -7.0809 -6.05331 -7.08093 0 ]ysh
145.13 484.83 mo
143.429 484.83 142.05 483.451 142.05 481.75 cv
142.05 401.51 li
142.05 399.809 143.429 398.43 145.13 398.43 cv
157.45 398.43 li
159.151 398.43 160.53 399.809 160.53 401.51 cv
160.53 481.75 li
160.53 483.451 159.151 484.83 157.45 484.83 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
145.13 484.83 mo
143.429 484.83 142.05 483.451 142.05 481.75 cv
142.05 401.51 li
142.05 399.809 143.429 398.43 145.13 398.43 cv
157.45 398.43 li
159.151 398.43 160.53 399.809 160.53 401.51 cv
160.53 481.75 li
160.53 483.451 159.151 484.83 157.45 484.83 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
157.984 471.328 mo
(IB3 )
[-5.03494 -10.8693 -10.1299 0 ]ysh
157.984 440.838 mo
(5x5)
[-10.1399 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
174.572 422.969 mo
(56x56x32)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.07953 -6.12042 -7.13965 0 ]ysh
181.37 493.11 mo
179.669 493.11 178.29 491.731 178.29 490.03 cv
178.29 395.39 li
178.29 393.689 179.669 392.31 181.37 392.31 cv
193.69 392.31 li
195.391 392.31 196.77 393.689 196.77 395.39 cv
196.77 490.03 li
196.77 491.731 195.391 493.11 193.69 493.11 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
181.37 493.11 mo
179.669 493.11 178.29 491.731 178.29 490.03 cv
178.29 395.39 li
178.29 393.689 179.669 392.31 181.37 392.31 cv
193.69 392.31 li
195.391 392.31 196.77 393.689 196.77 395.39 cv
196.77 490.03 li
196.77 491.731 195.391 493.11 193.69 493.11 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
194.225 472.392 mo
(IB3 )
[-5.03491 -10.8693 -10.1299 0 ]ysh
194.225 441.903 mo
(5x5)
[-10.1399 -8.63135 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
208.187 422.16 mo
(56x56x32)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
217.61 493.11 mo
215.909 493.11 214.53 491.731 214.53 490.03 cv
214.53 395.39 li
214.53 393.689 215.909 392.31 217.61 392.31 cv
229.93 392.31 li
231.631 392.31 233.01 393.689 233.01 395.39 cv
233.01 490.03 li
233.01 491.731 231.631 493.11 229.93 493.11 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
217.61 493.11 mo
215.909 493.11 214.53 491.731 214.53 490.03 cv
214.53 395.39 li
214.53 393.689 215.909 392.31 217.61 392.31 cv
229.93 392.31 li
231.631 392.31 233.01 393.689 233.01 395.39 cv
233.01 490.03 li
233.01 491.731 231.631 493.11 229.93 493.11 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
230.45 472.392 mo
(IB3 5x5)
[-5.03491 -10.8693 -10.1299 -4.43552 -10.1299 -8.64136 0 ]ysh
290.19 492.03 mo
288.467 492.03 287.07 490.633 287.07 488.91 cv
287.07 394.35 li
287.07 392.627 288.467 391.23 290.19 391.23 cv
302.67 391.23 li
304.393 391.23 305.79 392.627 305.79 394.35 cv
305.79 488.91 li
305.79 490.633 304.393 492.03 302.67 492.03 cv
cp
.00271611 .258885 .994812 0 cmyk
ef
290.19 492.03 mo
288.467 492.03 287.07 490.633 287.07 488.91 cv
287.07 394.35 li
287.07 392.627 288.467 391.23 290.19 391.23 cv
302.67 391.23 li
304.393 391.23 305.79 392.627 305.79 394.35 cv
305.79 488.91 li
305.79 490.633 304.393 492.03 302.67 492.03 cv
cp
.259129 .427436 1 .0466011 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
303.128 471.313 mo
(IB6 3x3)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
281.846 426.041 mo
(56X56x32)
[-7.07953 -7.08093 -7.25558 -7.07953 -7.0809 -6.05331 -7.08093 0 ]ysh
326.61 492.03 mo
324.887 492.03 323.49 490.633 323.49 488.91 cv
323.49 394.35 li
323.49 392.627 324.887 391.23 326.61 391.23 cv
339.09 391.23 li
340.813 391.23 342.21 392.627 342.21 394.35 cv
342.21 488.91 li
342.21 490.633 340.813 492.03 339.09 492.03 cv
cp
.61941 .110018 .982147 .00573739 cmyk
ef
326.61 492.03 mo
324.887 492.03 323.49 490.633 323.49 488.91 cv
323.49 394.35 li
323.49 392.627 324.887 391.23 326.61 391.23 cv
339.09 391.23 li
340.813 391.23 342.21 392.627 342.21 394.35 cv
342.21 488.91 li
342.21 490.633 340.813 492.03 339.09 492.03 cv
cp
.719112 .300572 1 .152926 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UZAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DLEHSZ+Calibri gcheck setglobal} if
4 3726 282 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>DLEHSZ+Calibri AddT42Char 
4 7024 455 <00010022fe94037c03bc00240071b0852b58b9001bfff040350b014d371b
01291b0118180b014d261801260e360e022709011a400b014d3a1a011938
0b014d3b19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b
5d2b015d5d5d2b5d5d2b1b400c1f49190a13490a4b044f004b00183f3f3f
3f12393f3031592103060623222e023713262627012634363633321e0217
0133133e023332161614070233780631321a201102067c091003febf0810
241e1e22140905010103f8061122201c241106feb51011050c140e013904
120a035c15180e0503080f0dfd2e02d6130b05050e181200>DLEHSZ+Calibri AddT42Char 
DLEHSZ+Calibri /CharStrings get begin
/d 282 def
/y 455 def
end
DLEHSZ+Calibri /Encoding get
dup 100 /d put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DLEHSZ+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 8{/.notdef}rp /B /C 
2{/.notdef}rp /F 2{/.notdef}rp /I 4{/.notdef}rp /N /O /P 
2{/.notdef}rp /S 2{/.notdef}rp /V /.notdef /X 10{/.notdef}rp /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o /p 3{/.notdef}rp /t 3{/.notdef}rp /x 
/y 134{/.notdef}rp]
DLEHSZ+Calibri nf
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
339.546 473.055 mo
(Identity)
[-5.03894 -10.5093 -9.96005 -10.3195 -6.71341 -4.55951 -6.71341 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
318.675 426.041 mo
(56x56x32)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.07953 -6.12042 -7.13965 0 ]ysh
363.03 499.23 mo
361.307 499.23 359.91 497.833 359.91 496.11 cv
359.91 387.15 li
359.91 385.427 361.307 384.03 363.03 384.03 cv
375.51 384.03 li
377.233 384.03 378.63 385.427 378.63 387.15 cv
378.63 496.11 li
378.63 497.833 377.233 499.23 375.51 499.23 cv
cp
.689113 .134463 0 0 cmyk
ef
363.03 499.23 mo
361.307 499.23 359.91 497.833 359.91 496.11 cv
359.91 387.15 li
359.91 385.427 361.307 384.03 363.03 384.03 cv
375.51 384.03 li
377.233 384.03 378.63 385.427 378.63 387.15 cv
378.63 496.11 li
378.63 497.833 377.233 499.23 375.51 499.23 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
375.964 471.301 mo
(IB6 )
[-5.03491 -10.8693 -10.1299 0 ]ysh
375.964 440.812 mo
(7x7)
[-10.1399 -8.63135 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
355.504 426.041 mo
(28x28x40)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.07953 -6.12042 -7.13965 0 ]ysh
399.57 500.31 mo
397.781 500.31 396.33 498.859 396.33 497.07 cv
396.33 388.35 li
396.33 386.561 397.781 385.11 399.57 385.11 cv
412.53 385.11 li
414.319 385.11 415.77 386.561 415.77 388.35 cv
415.77 497.07 li
415.77 498.859 414.319 500.31 412.53 500.31 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
399.57 500.31 mo
397.781 500.31 396.33 498.859 396.33 497.07 cv
396.33 388.35 li
396.33 386.561 397.781 385.11 399.57 385.11 cv
412.53 385.11 li
414.319 385.11 415.77 386.561 415.77 388.35 cv
415.77 497.07 li
415.77 498.859 414.319 500.31 412.53 500.31 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
412.741 472.382 mo
(IB3 5x5)
[-5.03494 -10.8692 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
392.333 423.101 mo
(28X28X40)
[-7.07953 -7.08093 -7.25558 -7.07953 -7.0809 -7.25562 -7.0795 0 ]ysh
436.71 500.31 mo
434.921 500.31 433.47 498.859 433.47 497.07 cv
433.47 388.35 li
433.47 386.561 434.921 385.11 436.71 385.11 cv
449.67 385.11 li
451.459 385.11 452.91 386.561 452.91 388.35 cv
452.91 497.07 li
452.91 498.859 451.459 500.31 449.67 500.31 cv
cp
.62768 .28513 0 0 cmyk
ef
436.71 500.31 mo
434.921 500.31 433.47 498.859 433.47 497.07 cv
433.47 388.35 li
433.47 386.561 434.921 385.11 436.71 385.11 cv
449.67 385.11 li
451.459 385.11 452.91 386.561 452.91 388.35 cv
452.91 497.07 li
452.91 498.859 451.459 500.31 449.67 500.31 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
449.879 472.382 mo
(IB3 )
[-5.03494 -10.8692 -10.1299 0 ]ysh
449.879 441.893 mo
(3x3)
[-10.1399 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
429.162 424.571 mo
(28X28X40)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
473.85 500.31 mo
472.061 500.31 470.61 498.859 470.61 497.07 cv
470.61 388.35 li
470.61 386.561 472.061 385.11 473.85 385.11 cv
486.81 385.11 li
488.599 385.11 490.05 386.561 490.05 388.35 cv
490.05 497.07 li
490.05 498.859 488.599 500.31 486.81 500.31 cv
cp
.62768 .28513 0 0 cmyk
ef
473.85 500.31 mo
472.061 500.31 470.61 498.859 470.61 497.07 cv
470.61 388.35 li
470.61 386.561 472.061 385.11 473.85 385.11 cv
486.81 385.11 li
488.599 385.11 490.05 386.561 490.05 388.35 cv
490.05 497.07 li
490.05 498.859 488.599 500.31 486.81 500.31 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
487.017 472.382 mo
(IB3 )
[-5.03494 -10.8692 -10.1299 0 ]ysh
487.017 441.893 mo
(3x3)
[-10.1399 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
465.991 424.571 mo
(28X28X40)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
510.99 506.43 mo
509.201 506.43 507.75 504.979 507.75 503.19 cv
507.75 380.07 li
507.75 378.281 509.201 376.83 510.99 376.83 cv
523.95 376.83 li
525.739 376.83 527.19 378.281 527.19 380.07 cv
527.19 503.19 li
527.19 504.979 525.739 506.43 523.95 506.43 cv
cp
.15845 1 1 .0960403 cmyk
ef
510.99 506.43 mo
509.201 506.43 507.75 504.979 507.75 503.19 cv
507.75 380.07 li
507.75 378.281 509.201 376.83 510.99 376.83 cv
523.95 376.83 li
525.739 376.83 527.19 378.281 527.19 380.07 cv
527.19 503.19 li
527.19 504.979 525.739 506.43 523.95 506.43 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
524.155 471.288 mo
(IB3 7x7)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
502.82 424.571 mo
(28X28X80)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
548.13 506.43 mo
546.341 506.43 544.89 504.979 544.89 503.19 cv
544.89 380.07 li
544.89 378.281 546.341 376.83 548.13 376.83 cv
561.09 376.83 li
562.879 376.83 564.33 378.281 564.33 380.07 cv
564.33 503.19 li
564.33 504.979 562.879 506.43 561.09 506.43 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
548.13 506.43 mo
546.341 506.43 544.89 504.979 544.89 503.19 cv
544.89 380.07 li
544.89 378.281 546.341 376.83 548.13 376.83 cv
561.09 376.83 li
562.879 376.83 564.33 378.281 564.33 380.07 cv
564.33 503.19 li
564.33 504.979 562.879 506.43 561.09 506.43 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
561.293 471.288 mo
(IB3 )
[-5.03494 -10.8693 -10.1299 0 ]ysh
561.293 440.798 mo
(5x5)
[-10.14 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
539.65 424.571 mo
(28X28X80)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
585.27 506.43 mo
583.481 506.43 582.03 504.979 582.03 503.19 cv
582.03 380.07 li
582.03 378.281 583.481 376.83 585.27 376.83 cv
598.23 376.83 li
600.019 376.83 601.47 378.281 601.47 380.07 cv
601.47 503.19 li
601.47 504.979 600.019 506.43 598.23 506.43 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
585.27 506.43 mo
583.481 506.43 582.03 504.979 582.03 503.19 cv
582.03 380.07 li
582.03 378.281 583.481 376.83 585.27 376.83 cv
598.23 376.83 li
600.019 376.83 601.47 378.281 601.47 380.07 cv
601.47 503.19 li
601.47 504.979 600.019 506.43 598.23 506.43 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
598.431 471.288 mo
(IB3 5x5)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
576.479 424.571 mo
(28X28X80)
[-7.07953 -7.08093 -7.25555 -7.07953 -7.08093 -7.25558 -7.07953 0 ]ysh
623.25 506.43 mo
621.461 506.43 620.01 504.979 620.01 503.19 cv
620.01 380.07 li
620.01 378.281 621.461 376.83 623.25 376.83 cv
636.21 376.83 li
637.999 376.83 639.45 378.281 639.45 380.07 cv
639.45 503.19 li
639.45 504.979 637.999 506.43 636.21 506.43 cv
cp
.62768 .28513 0 0 cmyk
ef
623.25 506.43 mo
621.461 506.43 620.01 504.979 620.01 503.19 cv
620.01 380.07 li
620.01 378.281 621.461 376.83 623.25 376.83 cv
636.21 376.83 li
637.999 376.83 639.45 378.281 639.45 380.07 cv
639.45 503.19 li
639.45 504.979 637.999 506.43 636.21 506.43 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
636.431 471.286 mo
(IB3 3x3)
[-5.03491 -10.8693 -10.1299 -4.43552 -10.1299 -8.64136 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
613.308 422.537 mo
(28x28x80)
[-7.0795 -7.08093 -6.05334 -7.07953 -7.0795 -6.12045 -7.13962 0 ]ysh
659.55 513.63 mo
657.761 513.63 656.31 512.179 656.31 510.39 cv
656.31 372.87 li
656.31 371.081 657.761 369.63 659.55 369.63 cv
672.51 369.63 li
674.299 369.63 675.75 371.081 675.75 372.87 cv
675.75 510.39 li
675.75 512.179 674.299 513.63 672.51 513.63 cv
cp
.62768 .28513 0 0 cmyk
ef
659.55 513.63 mo
657.761 513.63 656.31 512.179 656.31 510.39 cv
656.31 372.87 li
656.31 371.081 657.761 369.63 659.55 369.63 cv
672.51 369.63 li
674.299 369.63 675.75 371.081 675.75 372.87 cv
675.75 510.39 li
675.75 512.179 674.299 513.63 672.51 513.63 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
672.706 471.336 mo
(IB3 )
[-5.03494 -10.8693 -10.1299 0 ]ysh
672.706 440.846 mo
(3x3)
[-10.14 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
650.137 424.571 mo
(14x14x96)
[-7.07953 -7.08093 -6.05331 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
695.67 513.63 mo
693.881 513.63 692.43 512.179 692.43 510.39 cv
692.43 372.87 li
692.43 371.081 693.881 369.63 695.67 369.63 cv
708.63 369.63 li
710.419 369.63 711.87 371.081 711.87 372.87 cv
711.87 510.39 li
711.87 512.179 710.419 513.63 708.63 513.63 cv
cp
.62768 .28513 0 0 cmyk
ef
695.67 513.63 mo
693.881 513.63 692.43 512.179 692.43 510.39 cv
692.43 372.87 li
692.43 371.081 693.881 369.63 695.67 369.63 cv
708.63 369.63 li
710.419 369.63 711.87 371.081 711.87 372.87 cv
711.87 510.39 li
711.87 512.179 710.419 513.63 708.63 513.63 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
708.825 471.336 mo
(IB3 )
[-5.03494 -10.8693 -10.1299 0 ]ysh
708.825 440.846 mo
(3x3)
[-10.14 -8.63132 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
686.966 424.571 mo
(14x14x96)
[-7.07953 -7.0809 -6.05331 -7.07953 -7.07953 -6.12042 -7.13965 0 ]ysh
733.11 513.63 mo
731.321 513.63 729.87 512.179 729.87 510.39 cv
729.87 372.87 li
729.87 371.081 731.321 369.63 733.11 369.63 cv
746.07 369.63 li
747.859 369.63 749.31 371.081 749.31 372.87 cv
749.31 510.39 li
749.31 512.179 747.859 513.63 746.07 513.63 cv
cp
.689113 .134463 0 0 cmyk
ef
733.11 513.63 mo
731.321 513.63 729.87 512.179 729.87 510.39 cv
729.87 372.87 li
729.87 371.081 731.321 369.63 733.11 369.63 cv
746.07 369.63 li
747.859 369.63 749.31 371.081 749.31 372.87 cv
749.31 510.39 li
749.31 512.179 747.859 513.63 746.07 513.63 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
746.298 471.336 mo
(IB6 7x7)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
771.09 513.63 mo
769.301 513.63 767.85 512.179 767.85 510.39 cv
767.85 372.87 li
767.85 371.081 769.301 369.63 771.09 369.63 cv
784.05 369.63 li
785.839 369.63 787.29 371.081 787.29 372.87 cv
787.29 510.39 li
787.29 512.179 785.839 513.63 784.05 513.63 cv
cp
.0323186 .622003 .911589 .000457771 cmyk
ef
771.09 513.63 mo
769.301 513.63 767.85 512.179 767.85 510.39 cv
767.85 372.87 li
767.85 371.081 769.301 369.63 771.09 369.63 cv
784.05 369.63 li
785.839 369.63 787.29 371.081 787.29 372.87 cv
787.29 510.39 li
787.29 512.179 785.839 513.63 784.05 513.63 cv
cp
.240024 .716762 1 .132998 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -19.98 -19.98 0 0 0 ]msf
784.238 471.336 mo
(IB3 5x5)
[-5.03494 -10.8693 -10.1299 -4.43552 -10.1299 -8.64133 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
723.795 424.571 mo
(14x14x96)
[-7.07953 -7.0809 -6.05331 -7.07953 -7.07953 -6.12042 -7.13965 0 ]ysh
760.619 422.334 mo
(14x14x96)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
72.7101 488.43 mo
71.0091 488.43 69.6301 487.051 69.6301 485.35 cv
69.6301 397.91 li
69.6301 396.209 71.0091 394.83 72.7101 394.83 cv
85.0301 394.83 li
86.7311 394.83 88.1101 396.209 88.1101 397.91 cv
88.1101 485.35 li
88.1101 487.051 86.7311 488.43 85.0301 488.43 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
72.7101 488.43 mo
71.0091 488.43 69.6301 487.051 69.6301 485.35 cv
69.6301 397.91 li
69.6301 396.209 71.0091 394.83 72.7101 394.83 cv
85.0301 394.83 li
86.7311 394.83 88.1101 396.209 88.1101 397.91 cv
88.1101 485.35 li
88.1101 487.051 86.7311 488.43 85.0301 488.43 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
86.8895 469.792 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
86.8895 427.131 mo
(3x3)
[-8.10617 -6.96069 0 ]ysh
880.62 492.03 mo
878.913 492.03 877.53 490.647 877.53 488.94 cv
877.53 401.52 li
877.53 399.813 878.913 398.43 880.62 398.43 cv
892.98 398.43 li
894.687 398.43 896.07 399.813 896.07 401.52 cv
896.07 488.94 li
896.07 490.647 894.687 492.03 892.98 492.03 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
880.62 492.03 mo
878.913 492.03 877.53 490.647 877.53 488.94 cv
877.53 401.52 li
877.53 399.813 878.913 398.43 880.62 398.43 cv
892.98 398.43 li
894.687 398.43 896.07 399.813 896.07 401.52 cv
896.07 488.94 li
896.07 490.647 894.687 492.03 892.98 492.03 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
894.81 474.05 mo
(CONV)
[-8.39456 -10.6213 -10.32 0 ]ysh
894.81 431.389 mo
(1X1)
[-8.1062 -8.33997 0 ]ysh
916.13 492.03 mo
914.429 492.03 913.05 490.651 913.05 488.95 cv
913.05 401.51 li
913.05 399.809 914.429 398.43 916.13 398.43 cv
928.45 398.43 li
930.151 398.43 931.53 399.809 931.53 401.51 cv
931.53 488.95 li
931.53 490.651 930.151 492.03 928.45 492.03 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
916.13 492.03 mo
914.429 492.03 913.05 490.651 913.05 488.95 cv
913.05 401.51 li
913.05 399.809 914.429 398.43 916.13 398.43 cv
928.45 398.43 li
930.151 398.43 931.53 399.809 931.53 401.51 cv
931.53 488.95 li
931.53 490.651 930.151 492.03 928.45 492.03 cv
cp
1 /0 /CSD get_res sepcs
.529 sep
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
930.3 474.232 mo
(P)sh
930.3 466.254 mo
(ooling FC)
[-8.46005 -8.46002 -3.65265 -3.65262 -8.39438 -7.55972 -3.54037 -7.26028 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
60.8709 425.757 mo
(224x224x3)
[-7.07953 -7.08093 -7.07953 -6.05328 -7.07953 -7.14105 -7.13965 -6.05331 0 ]ysh
797.449 423.296 mo
(14x14x96)
[-7.07953 -7.0809 -6.05334 -7.07953 -7.07953 -6.12042 -7.13962 0 ]ysh
872.661 417.648 mo
(7x7x320)
[-7.07953 -6.05331 -7.07953 -6.05331 -7.08093 -7.13965 0 ]ysh
2.28 lw
88.08 441.6 mo
100.078 441.6 li
@
98.938 438.18 mo
105.778 441.6 li
98.938 445.02 li
cp
ef
124.32 441.6 mo
136.318 441.6 li
@
135.178 438.18 mo
142.018 441.6 li
135.178 445.02 li
cp
ef
160.5 441.6 mo
172.498 441.6 li
@
171.358 438.18 mo
178.198 441.6 li
171.358 445.02 li
cp
ef
196.74 441.6 mo
208.738 441.6 li
@
207.598 438.18 mo
214.438 441.6 li
207.598 445.02 li
cp
ef
232.92 441.6 mo
244.918 441.6 li
@
243.778 438.18 mo
250.618 441.6 li
243.778 445.02 li
cp
ef
269.16 441.6 mo
281.158 441.6 li
@
280.018 438.18 mo
286.858 441.6 li
280.018 445.02 li
cp
ef
305.76 441.6 mo
317.758 441.6 li
@
316.618 438.18 mo
323.458 441.6 li
316.618 445.02 li
cp
ef
342.36 441.6 mo
354.358 441.6 li
@
353.218 438.18 mo
360.058 441.6 li
353.218 445.02 li
cp
ef
378.6 441.6 mo
390.598 441.6 li
@
389.458 438.18 mo
396.298 441.6 li
389.458 445.02 li
cp
ef
415.74 442.68 mo
427.738 442.68 li
@
426.598 439.26 mo
433.438 442.68 li
426.598 446.1 li
cp
ef
452.88 442.68 mo
464.878 442.68 li
@
463.738 439.26 mo
470.578 442.68 li
463.738 446.1 li
cp
ef
490.02 441.6 mo
502.018 441.6 li
@
500.878 438.18 mo
507.718 441.6 li
500.878 445.02 li
cp
ef
527.04 441.6 mo
539.125 441.6 li
@
537.985 438.18 mo
544.825 441.6 li
537.985 445.02 li
cp
ef
564.3 441.6 mo
576.298 441.6 li
@
575.158 438.18 mo
581.998 441.6 li
575.158 445.02 li
cp
ef
601.44 441.6 mo
613.438 441.6 li
@
612.298 438.18 mo
619.138 441.6 li
612.298 445.02 li
cp
ef
638.58 441.6 mo
650.578 441.6 li
@
649.438 438.18 mo
656.278 441.6 li
649.438 445.02 li
cp
ef
675.72 441.6 mo
687.718 441.6 li
@
686.578 438.18 mo
693.418 441.6 li
686.578 445.02 li
cp
ef
712.86 441.6 mo
724.858 441.6 li
@
723.718 438.18 mo
730.558 441.6 li
723.718 445.02 li
cp
ef
750 441.6 mo
761.998 441.6 li
@
760.858 438.18 mo
767.698 441.6 li
760.858 445.02 li
cp
ef
787.32 441.6 mo
799.318 441.6 li
@
798.178 438.18 mo
805.018 441.6 li
798.178 445.02 li
cp
ef
859.98 442.68 mo
871.978 442.68 li
@
870.838 439.26 mo
877.678 442.68 li
870.838 446.1 li
cp
ef
806.75 513.63 mo
805.049 513.63 803.67 512.251 803.67 510.55 cv
803.67 372.71 li
803.67 371.009 805.049 369.63 806.75 369.63 cv
819.07 369.63 li
820.771 369.63 822.15 371.009 822.15 372.71 cv
822.15 510.55 li
822.15 512.251 820.771 513.63 819.07 513.63 cv
cp
.62768 .28513 0 0 cmyk
ef
1.02 lw
806.75 513.63 mo
805.049 513.63 803.67 512.251 803.67 510.55 cv
803.67 372.71 li
803.67 371.009 805.049 369.63 806.75 369.63 cv
819.07 369.63 li
820.771 369.63 822.15 371.009 822.15 372.71 cv
822.15 510.55 li
822.15 512.251 820.771 513.63 819.07 513.63 cv
cp
.8038 .523033 .196841 .0273136 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
820.926 460.716 mo
(IB3 3x3)
[-4.021 -8.69894 -8.1062 -3.71661 -8.10617 -6.95908 0 ]ysh
843.96 521.91 mo
842.253 521.91 840.87 520.527 840.87 518.82 cv
840.87 366.6 li
840.87 364.893 842.253 363.51 843.96 363.51 cv
856.32 363.51 li
858.026 363.51 859.41 364.893 859.41 366.6 cv
859.41 518.82 li
859.41 520.527 858.026 521.91 856.32 521.91 cv
cp
.697719 .930846 0 .00155642 cmyk
ef
843.96 521.91 mo
842.253 521.91 840.87 520.527 840.87 518.82 cv
840.87 366.6 li
840.87 364.893 842.253 363.51 843.96 363.51 cv
856.32 363.51 li
858.026 363.51 859.41 364.893 859.41 366.6 cv
859.41 518.82 li
859.41 520.527 858.026 521.91 856.32 521.91 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
DLEHSZ+Calibri*1 [0 -16.02 -16.02 0 0 0 ]msf
858.15 461.787 mo
(IB6 5x5)
[-4.021 -8.69897 -8.1062 -3.71658 -8.10617 -6.95908 0 ]ysh
1 /0 /CSD get_res sepcs
1 sep
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
836.677 417.653 mo
(7x7x192)
[-7.07953 -6.05334 -7.0795 -6.05331 -7.08093 -7.13965 0 ]ysh
2.28 lw
823.62 442.68 mo
835.618 442.68 li
@
834.478 439.26 mo
841.318 442.68 li
834.478 446.1 li
cp
ef
896.04 442.68 mo
908.038 442.68 li
@
906.898 439.26 mo
913.738 442.68 li
906.898 446.1 li
cp
ef
DLEHSZ+Calibri*1 [0 -13.98 -13.98 0 0 0 ]msf
910.422 422.332 mo
(7x7x1280)
[-7.07953 -6.05334 -7.0795 -6.05331 -7.08093 -7.13965 -7.13965 0 ]ysh
%ADOBeginSubsetFont: SZAAAA+ACaslonPro-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /SZAAAA+ACaslonPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2001, 2007 Adobe Systems Incorporated. All rights reserved. Adobe Caslon is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 71 /G put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
def
/FontBBox {-191 -700 1501 1002} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 420 435 668 683 708 723 737 742] def
/OtherBlues [-275 -272] def
/FamilyBlues [-15 0 418 433 450 462 668 683 708 723] def
/FamilyOtherBlues [-281 -272] def
/BlueScale 0.05 def
/BlueFuzz 0 def
/StdHW [33] def
/StdVW [72] def
/StemSnapH [33 36] def
/StemSnapV [72 75 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
30 dict dup begin
/space <1C60D8A8C9B8A2CE7C> |-
/parenleft <1C60D8A8C9B825FA7CE165719FB06FF5A262AF50863521117BC4
1D89C25EB662FD035DBD55BD4C1967DFB0C5501632DB82ED8D8A0C3FA489FEB6
447018691BA50A4C2066EED79D8F904796662D8BB7671860DACF5FAAF500E508
7AE48C154C984BC71B16B61E9A73A726D5DE> |-
/parenright <1C60D8A8C9B825FA7CE165719FEA653C38F201A751F31CCF7C5
7F3C2A83BACC320B7E7435095F3704DD385DEDE07FB527C9D078993FCE61B603
22637899876E7595F17194794BF7707D431DB18B27172DB26AEF45E9B5C5991A
17AB5319794634E4DE817CE0F828180191444> |-
/A <1C60D8A8C9B6086D56A6BDA8EC9020B62D7A2CCE646CCE9FA8102F732C85
F32B5818F72B52CC6CE5061B645439A924F1990DED5A201074EBC5E2C9BB1DEC
C962E47EE6E7B8858BFE448058878812786D2A06182F741D0831ECDFD37A9326
7ACF4E6F3809B432F5E57240B74C3A4AF32EDC692E06A1ED2A2AF71430CD8A7F
7402084ACCC076F8B33AC750990002DDF340A86BF082BB7DA6D88AF346F03534
297CD2C8BCD303A46A705C96FEF75C2FACA06A22871C0FF8D686F5766D995074
29C474C0D700CE0CF9B9B7C571D0D36B4FDBDD30604C532F10FCB289A1A542E3
D8BE179C47E498F513DAA73693626AE3D6DE3B9B7F0E34F452A902CE8EFF3DA6
40CDA87388C4DFE6613D08F2022F5EFF2F51A70B67CEF1F3139402F120C2506C
124930675D099CDED47A9B6C0B8C4AEB04204223FDEF5C46295B5EA57B466B83
452BB9> |-
/B <1C60D8A8C9B624F92031EB8D24F37C2A5148A008B92BC38ADC399761D596
DE3E6015FA4A7A27D68105A29C0B621715EEA30BBA2DCB1A040671FFF7992BA4
D9EE8ABF056C036BB949341AF211C55DDA15A5BBDF60A927278D528CDBA3B78E
189E2E0019E80CCC217D33F45724BC7C458544F557367F4DAD6D4F381CA6CF32
864057AF5A423D72B0740B4B9C5A8584C71E9D035DE87B75E3F925C931986A10
BDCE3661EA87A587ED900C62FBAC1A1E3010AFFD0229D872AF45ACDB2E4E042D
B97AAF73ECB24DE209F445AE9BB3023C77EFFED15BC2F45E8FB4763A8A234FC9
37D4CD0CD6834D788E08E815825AA3FCF03CD050B5103F188A961614A8F6ADA0
262B6242889CF859C2466353EAA4081727AE8ED1D24F8CEFBD01FE2A6B248C33
3E8AFEFA87E1019E6659BFCF0C84694E99B966806B42D2975FD02DF6DF7DD441
AC36E996137EF3AADB8C041A900160F82739A603921203FBCCCA0BE41EEC568F
5A8C488EC0F32908F48AAF962EE4B5238F9D6404A1B6E604029FD3DFB563FD60
AC4038C43BD95D1F9B9912BB00432A8DFEEF2F3CD683EDBB716FA249DB16564B
2E5F9D2B3F46C654A2> |-
/F <1C60D8A8C9B668C465D3581117D9532BB681E9D012405A08E90C98809347
74EACE11AD21B054D36BF7F2B103FA93B30121C434A80980547253E34AFE3442
E6EE2A02ECAFCCE5B7D97A81037B42D012C1BB7909AB40D2DFB414625C6FA352
205ADFECD6FD8D284FD5836A82383B84E0BFB39641281CC7303451F5884C5615
9242E6182059B58714421237007BD1C793B52758F7A8A816EA3B44DB7C79CAF9
E941558564418787BAB2BCC141B2A684104FE99782F07DF79B6A6B067E5C2FF5
7326BA3DFFFBD0CE2CF1A6D22822004A9EEC3919347CC713AEBE1ED5CFDBF776
E31E3999EEA3C746C3BF549ADD9A778520F35DAA937E2E249C2B1F92B1E74515
048600BC17027261725EF0A749BE463DC3FCF707066FB86E581F0FF08BB61972
359E424AE253DEA4593D297C97E373F3D00BC1E450AAE301898CFA043D49DCAD
EDB81FD1B3A0EE6B59F631059C58670D6FB0FF2DC9D8646CFE7B460DE594E4AD
C12EFFD11E8B65CFD703787EB999E80F71E12B4F018ECFAB45696BBE993B0FD8
EC8023E697A6DC211FA3D0B6A527E8A18897B23C53C0996E29> |-
/G <1C60D8A8C9B6BD5E8EA290E2A66965307CD90CFEB6BA6C681E499826986D
CC0449A6FAF64AB4A2BAD4E7FDF3FECB3931636BBD92C451DE54918480EB909A
A90864F4C375EEC12E0DDFDE9A283598DD6905C50BAFD4F23AE3546E2EA6A3FB
2BF66BC7EAA3F8B5ACCEA4078F80D67027C267D8FDAD58D79CAEBEA3B3D40349
5B86F1D23960A0B3E3869EFAAE5C76A02EFFFDD0F8FBBAF410F7B3E6916E72AB
9296C48C9025B672AFA2BB2C255466CE54B5498820696A9F71093DBD81226BE7
280477FA9EDE4E5DB4B3E6588FCED06D14F6FC2B17F7C88FACB0689848F885D3
6E031AD24ACC38F9347A5919D18DEF62143658058EEB0744859A5E7E42251A48
36D7CAA1BCB097B996D02F7A67C2C02506B61F7A6B38> |-
/M <1C60D8A8C9B5E0FF2C49770B1EA5B61C98F118521F772E51936C0938D16D
550787627E5B04D6AF49B2ADFD7AF805C1CD884615E6CAEFF8FF2D8AACB1D9EC
3C352D330B1B48016B76E217650E6E7B5B377F6DBF7A07DDDB51200E5DAA15F1
8FB2F25872B60E3D642FC254A31360E174320DDBE885D83AF30CE79852A02260
317F810F778088DF01EB71177EB3473732CB4283AE33282AF96069800BC9A850
DFB4FC80F2085CA97FD4ACCB2911C471393A031BEE2095D0CE819FC55B06D045
BD3166405EF2DE058B535C649B237391FEEC7A1F69C8F64961A05438077F6604
D5D07B5D2334BC4C3B590EC38597FF844CD638EFF6912F334D65857EA67263AA
F5792CD9A7E7E6DE932D64A113C8765CE8E9CC60649BBDE1302C351054938EAE
65694DF11C8510EF164AB84B091CB3F43D9A62CEA1A111DE024B04CC689DB6F3
7513B1F1450F1B72376D1C9682961594C1258BB3DDF29EE8D0D8D131BAA67E9C
FF82171377A0B6483477A20AB87E405D63847212C488EE7B3591CE65402A9D5F
1DD85D1C0BDB256BE6D344413A5DE6B7F03A8669885C7B976CDE2671F020D197
FB6E644A478A843EC1929DB7EB780EF1485C0C0363CD13E70F4836E771549F14
B33D5217B816B935CF5213020FDB> |-
/N <1C60D8A8C9B6DFB376A082574E8340984F54A6A9872E37319017FF6F0B2F
3B28CD682DF8FABC90E9CDBD07AB411C0573066E3BBFB71284C45D3DFCBFF426
30FF18C82942E9B9F1F21680F1547B9057CEE48849A444BB13C71185827DD873
3B13FA35F7956284D9073C9441D1CC76CC13B1813054269E13B99788FDB63E96
54E25EB0C79A68A922B0F04CEA7BD8FDE6B480B555761C0A2461685C3302FEFA
2D74773A089FD485C2FA88541932ED032EBE3FE8253222CD10CBB8B62E14D0AC
AAA6827DD25EEE1E33329F15CAA4B2199CB152762BBF3EB5959E307B553B1745
0A310D70333E472B1CE2611B12BBCFAA37379ACB3A61B9421358DD8017DF98F4
816287463F126537942827265A25461925AA2165D0020061A05530474D2E051F
9FBD4831A9CD6B15B7342CE3D1CDB5524A12B5892F0F5339AE3D71A7F5CA60BC
41722F41B92394B9E971892C5BD9F472D15472D403A0F1DFC32B99B1956CBFA0
E38B2C09205B2A65355C2044E01B9DD8690781828819139554731283EC> |-
/O <1C60D8A8C9B696EC90A71E59E0139D4023D1251629E101948D06319DF640
4C7DF21163FBA61B7B3FC4518AD9CBA2B50A08FD64476D335B589A910BE15A5C
A9624C65A2649CE71EDAD964D5AC9D78AB82BD7F26D5FA630CEF5545F1641854
8D5B40C958498CD9C56D60D222AF06A85080B6501C5BAC71271CB1E5F36B3330
0A4C33FF5A> |-
/P <1C60D8A8C9B675484F4096550E7759CA79E0BD3DDEF2FB7240DEEA67FDE8
DDA7626DAC35F6C97E2537FBA5B6986ECE4D99717BEEF43FDD0F1E4CC3D5A610
F73EF5E4410A701F1409679E65B952206C3D5D96FE663CE312645A2E237E6767
685054000FFEDBF936CC12AB8460D8EC334B86A9D683464A976A1D88DA558ED8
030AE438DBAAFC19939FD7318299F83ED95621FA52B45313319CF8A4146FE47C
7EC104B169D67C9B98038183C3C0F8678942C60D18DF1988FCFB9F6E0781D3E2
2A29BDE8761BBF0D8B1BCC31238A8D79DFD1B0CBE7CEF3CFAD5F4AA83422AF5E
BE4B006436A3A4B994F774B1B423E78693A1BD0FD03DB96B3E928771E30B638F
965B7820223B32A68CF0C43141D28D2CB017F6070877C86C5BD5BCCA40AFAB76
7C698184D948F5AB9D45> |-
/S <1C60D8A8C9B7FD84115C4B21D9D52CBD79C5820392C8AB14CBA7A1BF6BB1
8307A987B07EB9D9EE5273F7915CCF7B80C27139E535C299035897FE4F2A50D3
AC8EDB1080B2690CA234775C74C87094FFCE294064B299A7F0B183B48755514D
65E0E905AF7D56E7F5210664E339BA6A94EAE8BA2DCC8767ACDFEC476E728ED5
0BAAF76E3CB22A1223A7FA2527A9D8F1F5E671AAF56816EEDEDEC78D35E74175
722118728D0ECC4FCAF971C77ED9EE8C2008FA8087921706DCDD28A525D10390
9BA64D975B37A1BFECC898CD169989FED1113ED06F0479C4D47959D6FDE349A0
679DC4C8666969D5745A7FCEC1A015F98FDF3059> |-
/a <1C60D8A8C9B7734F090F4E54A365EE60E9F8CEF2451235046D460A256317
83397A6DD16337E67A008B24DA568B72FB126A5446E2E4B1C6589B92F9C69FE1
3B198453E6C07C94F59825C1DD07A023A6D108F96DA08C6E296917E7C27A3667
1819C3CC67BDF45B46EFF7D018103A2DCEE2B43780BBA0C274844FD663AE0527
65862A3CB3F29657B3BBD74C914B0BEC77B96BC38909BA4FAACA228C22C67ED5
1DA42972C56F6EA9C8558493D8639FD30BF2F15AB4C362F1137EB2B97C0D7238
CF524E51A23C493F2F06B3C311D1F2396EBCF82094F2101424EE99CE942CCB67
303FD8107D903A865CAE952F744280CEE8198ED1> |-
/b <1C60D8A8C9B78E056F742115426B92D03591F2F37BA88139A0BEA474911E
EB571DFD658BA2B0697B64E94B0116FE1DA64B3A77E70B02A014CE80E59AB3D2
45FD89C64E29A011D8F283E1F660D00176CC4EA33CB59F519F8085603C8F03DD
3C9323132925C866A27A9EB6B7BE725F2748196B1E24244DE5786D4FF8ABA38E
F239D72B013300F4D0F0246A938F100F66A4BD16278A82E77117D2E68C8A4D2F
016B30BDC1A06FE9665724438B1B309E5A3C287E70872F7D849405C68B20DCB3
6121E3966B03B9229F> |-
/c <1C60D8A8C9B76798698C5D3F0CE2966CC297F3597783231CADE1B2F5064C
EA8D541F9390B5C5FA3EF83A80146DFFA1227A613A56D55271A0E86449BC3A92
9DBCBD14182358A70294D4CB35B792FF036ECA1D0C0A99DD47C82B12F761FAA5
8C5E59D865EE7D81C62199391FDE86CC4D152B6B70B718178DCDD0C9AF35C54E
6D2981> |-
/d <1C60D8A8C9B781814A6817C86268B8353D9BCC909105B06D9ED22CB8F0D0
E4E6647F5C2977F3FE6B668C02416202AEB1D2E1D899E5822783800413B1D5B9
B89BB193C0AFE7C284542EFE8F10C73D41FC22A7138ADFEBED96F0C4A7F11BF9
1F0123E4C4A539356B1BB71CA636A0948B6AC8A7BED3F92A1A8A1D1740D0A431
A82D5DBB089AF9CB2A7A7884732D2F9FEFE217E74B43C4255B37273E3A596067
1A67493A01DD6A8E5E878A8A53D6331527E19B445053299E1C78EF85C0921A81
F09AA4A9266345755CC2D43F527613406978C4272697B3E0EB8F56C07202ED1E
B80E7EEC05B26243516EAC2D8409B375452C532289D4E67597399D> |-
/e <1C60D8A8C9B778477843C7296A1A84EDA224A8FFE3E8C790141E988C9638
0F86997FA1753A44F03E4F9C06FDB4613B52B76870C317DC7A41F8A59C6DA9FA
D8576A94412ADFD2BD50567C18D9958E7D1043737E04356354CD1BB151451D1F
DBB49928DA8E1ACC36FCC1946E9F2B1DC5CF342B9027AC5AA40762151F71DD4B
924FAA95CDDC5AD4> |-
/f <1C60D8A8C9B82424D65328269EE8AD3E51319858DF6A6C2E87E12EBC3BBA
1D3C76B951A110A7F11A1A5B6A8203BFF0D98540A13AA6C081477F3690AA58E8
C4B2C103563A921699EBAFAF595D33D5003B5A1CB962FAFEAE07BED5507C7481
EFB651BCC34D05B0D4894E1C0743C76634ECB4666E09329A9E2956F98CB77934
E2D13C4879A8238EFD44E58E7543599F69CFE49363B1A43BA799042E0EB65191
3CE3C9882101BBCDD3EDEDC9C8CCD4176369E6688D4326BBB8AF2AEB902F50D8
D17C6D9B3B19BEBFEBA8711BE4299A28ACC693BD6676F62E23ED9927E488D6> |-
/h <1C60D8A8C9B7EB081D3253D67673B538BFD5F60F885D6D0EA1DEC99C3E2E
054A37108F455123046A8556BD462D3CBD220DCFC30F8EDA8B572F1A34681F3B
F917D8C9944128D9BC69971B665A471DECB86C97A2C1E51CD9E27DC08E104EF9
403EAF152FA78B56F265EAC6A2CA10C65D9FF62EF9DD0D4A331DCE6D581D0E16
59D29D2F52AA9CCEAED19AB045173E06143F87A13B66D393E7BD559AE80395DE
64176F43F5390D7C509433F123DB660E9E94B8642AFF197C555C136A45C45C18
6D9961C73EC7CC119C298F23BDCCD3D07BB0AEB603F4D6A072AFA35CFC45F75F
62FE0560FB8B8E0CA12B8EDAA192AF72FDF049E8B428CFE4EDC59CBFD56A9D46
8017DBFF38125167DF4E8F28252FB98DC64A7C34135CA8A60B6BD5B69332E720
ABC473E1945C5886084354AEB593A84673D6826E9360221AEC817BD46721EF11
CEAB9841DC1998AA1BEC79E7BA> |-
/i <1C60D8A8C9B8483DB555AA5D231BF46E576325FEF3C5A384019056F5C5CE
C25E7E6B020460A392E37F109BAC2E6C3EA66E0888C5BB3DD6B5B2773D4F7985
7EC501E3A5B774253A9D0D539C7C6FD0ADE828A96A972F6076A928DEBEA6D646
866D1C5634DBD92FF3F1E7C8A70260ED98F62F10B8206EC2A63938E82C8A2E51
4D3F51EA818D2990C8F0C5466D6500AF0D0CB401BB6C58F88B02BC8FC6DF328F
BD839C1CA854AD7D89D532FFA42D0FC1CBE11E1001DB00B8AECB82D2902567AC
41FECE068BD27AA6012F3EF9A88988657FB1663CA12FDECF224A608EA9EA079F
C574F0149B> |-
/l <1C60D8A8C9B8483DB555AA5CE2A2C9FB668F410BDA4F726C92E267CDC4AA
D317C3EE2A18B6B7EC3D4C86FE4A62A36E9E11CD6371F2192B0AE93B4D368698
7A4510DBE9AC69A8F0F0A2BB748F4C3060E62620E0649F3436E9CEF0A9BCC8D1
11BA90271042EECB0017D2438A3ADE159BDAFA1C200AE9D4C1382A1B0CA11247
B5E5C95C6185BAB9F181D9778D5292845F1FD558CC94BAEA70562EFB1BF7ACDB
6B5EE3B6DA6FE6FE57DD9C852D8439D1FA2BB8C8> |-
/n <1C60D8A8C9B7E6F02CEA4426511F6C835B71E466DCF08C00AE36A45BBFE6
6446F7782B03F6E195B9E40067DC8BD8F09205B394117AF7A3C711BB7C22ADD9
DB2FA4084CC466FA0A73B887AC762A51801029C66AED1AC647419C5F9026CD8F
3C3B1D0B587035F2DCE2C47237203EA52320121007867C0621F8C374F4CCA64B
A6368F92AC8292B95FD38D6FC6BDEAFA42EC33B952E1EB1A138112DC288AFFE0
D16FB49D46E8AE3901C01FC257E1CFC21A69E30E29D2AB83505F9A08A9FE37C3
1ABBA8A551CE0574B6355B2C22AA30BBD24E012BE1CC3C243ABE85A219C38BEF
0D287FFDE6D2C717B9EF30346B0D16582603601080DC36DA0F2353D359D06B4E
6629EDB8D158D83C211E5BA7A3BBEDB644FCCD2CACC785BC282FA1AFC096B920
7B2E56DC7B0FCD6628BC2E9D65605E9E61414160DCA57AFABF2A755500> |-
/o <1C60D8A8C9B78E056F70E7D95FFE3BFC78AD09A1808710F4E85A592CF1CB
20A50BBFC1EC9B3619FB57E96BBBADD18A7DCEC6F1DCBD49CF871159C68B7846
F387C17B13E3F3FA283AD402060AB2E47A7E2D7D0544AC648288B964F029EA18
1A5535752CCDD5D0CBCF1FEA134F30E82E0E343D3BD2E29B29C538BEC597D0DB
A5939343> |-
/r <1C60D8A8C9B72DDD34CBC50433662270397B5DE42D6059A18BCC161C3F6F
A629F179EA686639915AB9879520A7EB0DECCF7A6FF1D187CC7D320B209584B4
4E10BBC11977114A545646F3E60EE8D1C37D322A84CC5FBE352ACEE65BAD95A0
463EED223F5E9CEA28B98ECAD5F77BA02404FC44B48A3A71FB70C2154B93B98C
37CCCED4759BE6F6A60F9C9C076DFD80B6C81CDC79FC2ACF44DBCA2008CB53A4
FCFE197FFCE218FE7733C2D3142D750F9B5E412471FE0C74110B2135ECC66589
77A12BFD8E5AE279DE43551807113CD19A9CCE1A37992296B282A8168119D1F7
7A> |-
/s <1C60D8A8C9B737ECA17AB971BD806AFA573DB1CF34DE6DAC893CDF181B6C
0CB383D20E745EC1CEABCF16C35B8D65406703B15FE74313CF5C0C75AEC5F714
B763D468952FE3573C969396BB6009393EFEFB9B4819696D7059857B196F72B4
FE6038BF9CBBBA2EFB71ACB539BB792B9A6F732F63466C8FBC21BABE81C6C9BE
19FC212B7449278AC73C81793816ABF40B2CDC98A2DE6A245F26E8804D217F16
607C7D90A82B8770B36A21EA0A927639A5F66A00BD> |-
/t <1C60D8A8C9B817A0FE1E804D0FDA3AAED7996823D7BEF6506413CBBBFBD4
FEBF2B6372AE915C1FA7ECF6A35E537838703D68D29FCFBF8998EFC7F710640B
24DCFE4D67340D43E886D2A31D710AEB0FA67464ABEFAFFCF951909B61C9B7BD
308E083CE8B8AF429A33B7EC41ED499271749EAFDF2D32AC5641403F38CF46E4
0D88FA55D375F8E169BA03DBC833AA89B9CC> |-
/u <1C60D8A8C9B798157DDDFE7942361613FD3543164D36C9CD3198798BAB76
E9B3299F7ABD2064D13EACAC357D28E517007DCF28E499A9696EAF795B8D70DA
37780E299D1D9CC881FFEA832ECD84DD3D503F5AB9C753250AE2E13074AD1870
E62883B924FE120CFF17FB9BD8E37433DCBDB12AC19A3E765CF3438123D64DC7
5D20908EAC2AAC9500BB1264AF2D3D799EDA5F143000D9EA244AE6F02BD40728
80BF53BD38EF8D9B9E55896666278ECFA432C5357A13165FB106584205D7B2D7
C805D8D898A45D21031368797B613F32696BECD3CD70334D2ABBEEDE2E31CBC0
5D505570B808D2F4ADEEFC7B8ADEBD122BC7E7D15C7490D4CC1DC874A77B03AC
8E4873B4F88375131CDCE2CE8A3C5681453D90151EF1DDA9D32421DAA689019F
82F6522B0EECA88CB99E666A51E24EECD2AFEA03F0B115440D07> |-
/w <1C60D8A8C9B65F8A2BF3F362FFFF7D5BFA8BC89CEC7909CCF942CB7F89F0
9801546150867E7ED15F87D1510B37C42A2B8B2256D6FA14F49A55E8E6DDDEEC
EE3442E3F7B49D7C06F2630BDE9EB98FD3B9313AC61BDAC96118577F4EC8FA01
50A12D3CF26531AAA9663D5AD607939AE79F671BD8CDDA0F2121ABB01864F645
1B36EF1B7AA671B4FA64956A5E5826E47271A48EF0F3E3092A72943F9BFF8667
2220CFEA6672465B21F0964EAA23DCF0DE0676B871D11C659400316CA92AEFC3
88F9819181D55089CF739BD886580B849936AE1DE27BEC3D0F7B74FE8AB26196
F8FF4BFA955F77CA839A182259C7F8904860D0DC4D2022495EDB68C6FEBC7A38
D153B9BE6B9338C313BA72A13FD1B7B4F44F02ED00B47CA3DDF88F0FADC42149
2935B1FD76F48F96149777F6600D2E64B8F65B5F36B398C13DCED0A80D6F5E1B
B2D18ABFDFB6F17CAFFE3D89DF21E310B1832001E1091A3CC2C9828ECB07B256
CE6093152EF90FBD2702AEA6A5B0CC967CC5DA1626E16E9DF5A32A59ED70D107
664743D64F438F> |-
/y <1C60D8A8C9B761B29641DB073A69B94F3F5642521E0FB4631DAD4AC8F0D5
5EAD9CF9E17600E2FD8BD5AF1C99A6E4F3F5CE960C240F1ECE99662A84AE866A
F9191C821FCD017266A4B752738495284FF7B23830CEA02596A36C71FEB6A37A
260310F11609C0B883CF5D509CA316A167CFAEAF4F59B08FFE52E827FF67A7F4
6D68B8CBC183E3B89CF914474C24995ECF5ECEEA51BD58FC04AF7306E882DE20
64C3D25DECF17EA5EEB4C2714304F683029BEB53C7AD3F67B50F29F634A1CFDC
B65184A93074CB099DB1E082C522C2B8072C296E82EED8B720902822CEFA1D16
8EA273940AE51FB7E1949A63E13E81B4162274886105AACEDF98DB4F80463EFF
3FF8461EBBC6A1D663832A9FA81FD599A662722B90C20ACF074C5675877A982A
E51D88FFB0AE9D9E82377007AC2FEA42581BB3ABD9CD964D8EEA28E9> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DLEHTA+ACaslonPro-Bold /SZAAAA+ACaslonPro-Bold findfont ct_VMDictPut
/DLEHTA+ACaslonPro-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B 
3{/.notdef}rp /F /G 5{/.notdef}rp /M /N /O /P 
2{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e 
/f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /.notdef /w 
/.notdef /y 134{/.notdef}rp]
DLEHTA+ACaslonPro-Bold nf
DLEHTA+ACaslonPro-Bold*1 [19.98 0 0 -19.98 0 0 ]msf
265.765 174.068 mo
(\(a\) Best Model found by SPOS with MFG selection )
[6.53937 8.88098 6.53937 4.1358 13.5603 8.69937 7.38062 6.59949 4.1358 19.9202 10.3195 10.5613 
8.69937 5.22064 4.25967 6.41962 10.1897 10.4995 10.989 10.5593 4.31964 10.2596 8.75928 4.26166 
11.0391 12.2997 16.9811 11.0391 4.1358 13.5605 5.40051 6.59943 10.8611 4.19971 19.9202 12.5394 
16.6793 4.25964 7.38062 8.69934 5.2207 8.69934 8.33972 6.72131 5.3985 10.2017 10.9791 0 
]xsh
246.704 351.89 mo
(\(b\) Best Model found by )
[6.53937 10.3795 6.54138 4.1358 13.5583 8.70139 7.38062 6.59946 4.1358 19.9202 10.3195 10.5593 
8.70139 5.21866 4.25964 6.41968 10.2017 10.4994 10.9791 10.5613 4.31961 10.2596 8.75925 0 
]xsh
449.92 351.89 mo
(FairNAS)
[11.948 8.87897 5.40048 7.14078 15.7202 14.8793 0 ]xsh
529.061 351.89 mo
(with MFG selection )
[13.5605 5.39447 6.59949 10.8591 4.19574 19.9202 12.5394 16.6792 4.2597 7.38062 8.70135 5.21863 
8.70135 8.33978 6.7193 5.39447 10.1996 10.9811 0 ]xsh
gsave
0 540 mo
960 540 li
960 0 li
0 0 li
cp
clp
DLEHTA+ACaslonPro-Bold*1 [19.98 0 0 -19.98 0 0 ]msf
239.84 531.311 mo
(\(c\) Best Model found by )
[6.53937 8.33176 6.54137 4.19974 13.5583 8.70139 7.37262 6.60147 4.1358 19.9202 10.3195 10.5593 
8.69937 5.22064 4.25967 6.41968 10.1996 10.5014 10.9791 10.5593 4.31961 10.2616 8.75928 0 
]xsh
grestore
gsave
0 540 mo
960 540 li
960 0 li
0 0 li
cp
clp
DLEHTA+ACaslonPro-Bold*1 [19.98 0 0 -19.98 0 0 ]msf
441.08 531.311 mo
(GreedyNAS)
[16.6792 6.96097 8.69937 8.69937 10.5613 8.75925 15.7202 14.8793 0 ]xsh
grestore
gsave
0 540 mo
960 540 li
960 0 li
0 0 li
cp
clp
DLEHTA+ACaslonPro-Bold*1 [19.98 0 0 -19.98 0 0 ]msf
547.22 531.311 mo
(with MFG selection )
[13.5605 5.39447 6.59949 10.8591 4.19574 19.9202 12.5394 16.6792 4.2597 7.38062 8.70135 5.21863 
8.70135 8.33978 6.7193 5.39447 10.1996 10.9811 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DLEHTA+ACaslonPro-Bold*1 uf
/DLEHTA+ACaslonPro-Bold uf
/SZAAAA+ACaslonPro-Bold uf
/DLEHSZ+Calibri*1 uf
/DLEHSZ+Calibri uf
/UZAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
